#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass beamer
\begin_preamble
\usepackage{cibeamer}
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package none
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 10
\spacing single
\use_hyperref false
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 0
\use_package cancel 0
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 0
\use_package mhchem 0
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip smallskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%% Lecture for Artificial Intelligence, Chapter 5, http://artint.info 
\end_layout

\begin_layout Plain Layout

%% Copyright David L.
 Poole and Alan K.
 Mackworth, 2010-2013
\end_layout

\begin_layout Plain Layout

%% Copyright Peter Ljunglöf, 2015
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

%% This work is licensed under CC BY-NC-SA 4.0, the Creative Commons
\end_layout

\begin_layout Plain Layout

%% Attribution-NonCommercial-ShareAlike 4.0 International License.
 
\end_layout

\begin_layout Plain Layout

%% To view a copy of this license: http://creativecommons.org/licenses/by-nc-sa/4.
0/
\end_layout

\end_inset


\end_layout

\begin_layout Title (Plain Frame)
Chapters 5: Propositions and Inference
\end_layout

\begin_layout Subtitle
DIT410/TIN172 Artificial Intelligence
\end_layout

\begin_layout Author
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Peter Ljunglöf
\end_layout

\end_inset

Peter Ljunglöf
\begin_inset Newline newline
\end_inset

 modifed from slides by Poole & Mackworth
\begin_inset Newline newline
\end_inset


\size footnotesize

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

(Licensed under Creative Commons BY-NC-SA v4.0)
\end_layout

\begin_layout Date
1 April, 2015
\end_layout

\begin_layout PlainFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Outline
\end_layout

\end_inset


\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
AtBeginSection[]
\end_layout

\begin_layout Plain Layout

{
\end_layout

\begin_layout Plain Layout

  
\backslash
begin{frame}<beamer>[plain]{Outline}
\end_layout

\begin_layout Plain Layout

    
\backslash
tableofcontents[currentsection,currentsubsection]
\end_layout

\begin_layout Plain Layout

  
\backslash
end{frame}
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
newcommand{
\backslash
TRUE}{
\backslash
emph{true}}
\end_layout

\begin_layout Plain Layout


\backslash
newcommand{
\backslash
FALSE}{
\backslash
emph{false}}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Propositions (5.1--5.2)
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Quotation
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
em
\end_layout

\end_inset

 For when I am presented with a false theorem, I do not need to examine
 or even to know the demonstration, since I shall discover its falsity 
\emph on
a posteriori
\emph default
 by means of an easy experiment, that is, by a calculation, costing no more
 than paper and ink, which will show the error no matter how small it is…
\end_layout

\begin_layout Quotation
And if someone would doubt my results, I should say to him: "Let us calculate,
 Sir," and thus by taking to pen and ink, we should soon settle the question.
 
\end_layout

\begin_layout Standard
\align right
---Gottfried Wilhelm Leibniz [1677] 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{slide}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
slhead
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Learning Objectives
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 At the end of the class you should be able to: 
\end_layout

\begin_layout Itemize
explain how symbols can have meaning 
\end_layout

\begin_layout Itemize
represent a problem in a simple logic 
\end_layout

\begin_layout Itemize
prove soundness and completeness of a proof procedure 
\end_layout

\begin_layout Itemize
debug a logic program without knowing the how inference works 
\end_layout

\begin_layout Itemize
use negation-as-failure where appropriate 
\end_layout

\begin_layout Itemize
use assumption-based reasoning for a simple domain 
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{slide}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Syntax of propositional calculus
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Propositions are built from simpler propositions using logical connectives.
 A proposition is either:
\end_layout

\begin_layout Itemize
an atomic proposition (also called atom, symbol or a boolean variable),
\end_layout

\begin_layout Itemize
or a compound proposition of the form:
\end_layout

\begin_deeper
\begin_layout Description
\begin_inset Formula $\neg p$
\end_inset

 : the negation of 
\begin_inset Formula $p$
\end_inset

 
\end_layout

\begin_layout Description
\begin_inset Formula $p\AND q$
\end_inset

 : the conjunction of 
\begin_inset Formula $p$
\end_inset

 and 
\begin_inset Formula $q$
\end_inset

 
\end_layout

\begin_layout Description
\begin_inset Formula $p\vee q$
\end_inset

 : the disjunction of 
\begin_inset Formula $p$
\end_inset

 and 
\begin_inset Formula $q$
\end_inset

 
\end_layout

\begin_layout Description
\begin_inset Formula $p\rightarrow q$
\end_inset

 : the implication of 
\begin_inset Formula $q$
\end_inset

 from 
\begin_inset Formula $p$
\end_inset

 
\end_layout

\begin_layout Description
\begin_inset Formula $p\IFF q$
\end_inset

 : the equivalence of 
\begin_inset Formula $p$
\end_inset

 and 
\begin_inset Formula $q$
\end_inset


\end_layout

\end_deeper
\begin_layout Standard
The precedence of the connectives is in the above order.
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Interpretations, models and propositions
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
An 
\emph on
interpretation
\emph default
 is an assignment of values to all symbols.
 
\end_layout

\begin_layout Itemize
A 
\emph on
model
\emph default
 is an interpretation that satisfies the constraints.
 
\end_layout

\begin_layout Itemize
Often we don't want to just find a model, but want to know what is true
 in all models.
 
\end_layout

\begin_layout Itemize
A 
\emph on
proposition
\emph default
 is statement that is true or false in each interpretation.
 
\end_layout

\begin_layout Itemize
Propositions are built using 
\emph on
logical connectives
\emph default
.
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Semantics of propositional calculus
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
An interpretation is a function 
\begin_inset Formula $\pi$
\end_inset

 that maps atoms to 
\begin_inset Formula $\{true,false\}$
\end_inset

:
\end_layout

\begin_layout Itemize
if 
\begin_inset Formula $\pi(a)=true$
\end_inset

 (
\begin_inset Formula $false$
\end_inset

), we say atom 
\begin_inset Formula $a$
\end_inset

 is true (false) in the interpretation
\end_layout

\begin_layout Itemize
we can also think of 
\begin_inset Formula $\pi$
\end_inset

 as the set of atoms that map to true
\end_layout

\begin_layout Standard
The interpretation maps each proposition to a truth value.
 The truth value of a compound proposition is built using this 
\emph on
truth table:
\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="7">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $p$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $q$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\neg q$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $p\AND q$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $p\vee q$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $p\rightarrow q$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $p\IFF q$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
TRUE
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
TRUE
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
FALSE
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
TRUE
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
TRUE
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
TRUE
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
TRUE
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
TRUE
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
FALSE
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
TRUE
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
FALSE
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
TRUE
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
FALSE
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
FALSE
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
FALSE
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
TRUE
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
FALSE
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
TRUE
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
TRUE
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
FALSE
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
FALSE
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
FALSE
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
FALSE
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
FALSE
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
TRUE
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
TRUE
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{slide}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
slhead
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Why propositions?
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Plain Layout
A 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
alert
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

proposition
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 is a statement that is either true or false.
\end_layout

\begin_layout Plain Layout
Propositions can be built using logical connectives.
 
\end_layout

\begin_layout Itemize
Specifying proposition is often a natural specification 
\end_layout

\begin_layout Itemize
Correctness can be checked locally 
\end_layout

\begin_layout Itemize
The answer depends on the semantics, not how it is implemented 
\end_layout

\begin_layout Itemize
Debugging can use the semantics of propositions 
\end_layout

\begin_layout Itemize
We choose inference method to be efficient 
\end_layout

\begin_layout Itemize
It provides a language for asking queries 
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
item You may only have partial knowledge of some constraints
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
It is easy to incrementally add formulae 
\end_layout

\begin_layout Itemize
It can be extended to infinite domains (using quantification) 
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{slide}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Simple language: Propositional definite clauses
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
An 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

atom
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 is a symbol starting with a lower case letter 
\end_layout

\begin_layout Itemize
A 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

body
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 is of the form 
\begin_inset Formula $b_{1}\wedge\dots\wedge b_{k}$
\end_inset

 where 
\begin_inset Formula $b_{1}\dots b_{k}$
\end_inset

 are atoms
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $k$
\end_inset

 can be 1, in which case the body is a single atom
\end_layout

\end_deeper
\begin_layout Itemize
A 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

definite clause
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 is an atom or is an implication of the form 
\begin_inset Formula $b\rightarrow h$
\end_inset

 where 
\begin_inset Formula $b$
\end_inset

 is a body and 
\begin_inset Formula $h$
\end_inset

 is an atom
\end_layout

\begin_deeper
\begin_layout Itemize
usually we write the clause backwards, 
\begin_inset Formula $h\IF b$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
A 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

knowledge base
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 is a set of definite clauses 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Definite Clauses
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Which of the following are definite clauses? 
\end_layout

\begin_layout Description
(a) 
\begin_inset Formula $happy\IF sad$
\end_inset

 
\end_layout

\begin_layout Description
(b) 
\begin_inset Formula $blimsy$
\end_inset

 
\end_layout

\begin_layout Description
(c) 
\begin_inset Formula $old\AND wise\IF teenager$
\end_inset

 
\end_layout

\begin_layout Description
(d) 
\begin_inset Formula $happy\land sad$
\end_inset

 
\end_layout

\begin_layout Description
(e) 
\begin_inset Formula $glad\IF happy\land sad$
\end_inset

 
\end_layout

\begin_layout Description
(f) 
\begin_inset Formula $green\lor blue\IF\neg red$
\end_inset

 
\end_layout

\begin_layout Description
(g) 
\begin_inset Formula $glad\IF happy\land sad\land mad\land bad$
\end_inset

 
\end_layout

\begin_layout Description
(h) 
\begin_inset Formula $glad\IF happy\land rad\IF sad\land mad\land bad$
\end_inset

 
\end_layout

\begin_layout Description
(i) 
\begin_inset Formula $happy\IF happy$
\end_inset

 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{slide}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
slhead
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Representation and Reasoning System
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 A Representation and Reasoning System is made up of: 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

formal language:
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 specifies the legal sentences 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

semantics:
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 specifies the meaning of the symbols 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

reasoning theory or proof procedure:
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 nondeterministic specification of how an answer can be produced.
 
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{slide}
\end_layout

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Human's view of semantics
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Description
Step
\begin_inset space ~
\end_inset

1 Begin with a task domain.
 
\end_layout

\begin_layout Description
Step
\begin_inset space ~
\end_inset

2 Choose atoms in the computer to denote propositions.
 
\end_layout

\begin_deeper
\begin_layout Itemize
These atoms have meaning to the KB designer.
 
\end_layout

\end_deeper
\begin_layout Description
Step
\begin_inset space ~
\end_inset

3 Tell the system knowledge about the domain.
 
\end_layout

\begin_layout Description
Step
\begin_inset space ~
\end_inset

4 Ask the system questions.
 
\end_layout

\begin_deeper
\begin_layout Itemize
The system will answer whether the question is a logical consequence.
 
\end_layout

\end_deeper
\begin_layout Description
Step
\begin_inset space ~
\end_inset

5 Interpret the answers with the meaning associated with the atoms.
 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Role of semantics
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "45text%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

In computer:
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{code}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
head
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

light1_broken 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
IF
\end_layout

\end_inset

 sw_up 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
body
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
AND
\end_layout

\end_inset

 power 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
AND
\end_layout

\end_inset

 unlit_light1.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
head
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

sw_up.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
head
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

power 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
IF
\end_layout

\end_inset

 lit_light2.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
head
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

unlit_light1.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
head
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

lit_light2.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{code}
\end_layout

\end_inset

 
\end_layout

\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "50text%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

In user's mind:
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
\begin_inset Formula $light1\_broken$
\end_inset

: light 
\begin_inset Formula $\#1$
\end_inset

 is broken 
\end_layout

\begin_layout Itemize
\begin_inset Formula $sw\_up$
\end_inset

: switch is up 
\end_layout

\begin_layout Itemize
\begin_inset Formula $power$
\end_inset

: there is power in the building 
\end_layout

\begin_layout Itemize
\begin_inset Formula $unlit\_light1$
\end_inset

: light 
\begin_inset Formula $\#1$
\end_inset

 isn't lit 
\end_layout

\begin_layout Itemize
\begin_inset Formula $lit\_light2$
\end_inset

: light 
\begin_inset Formula $\#2$
\end_inset

 is lit 
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Conclusion: 
\begin_inset Formula $light1\_broken$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Itemize
The computer doesn't know the meaning of the symbols 
\end_layout

\begin_layout Itemize
The user can interpret the symbol using their meaning 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Semantics
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Simplified semantics for definite clauses:
\end_layout

\begin_layout Itemize
An 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

interpretation
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset Formula $I$
\end_inset

 assigns a truth value to each atom.
 
\end_layout

\begin_layout Itemize
A body 
\begin_inset Formula $b_{1}\AND\dots\AND b_{k}$
\end_inset

 is 
\begin_inset Formula $true$
\end_inset

 in 
\begin_inset Formula $I$
\end_inset

 if all 
\begin_inset Formula $b_{i}$
\end_inset

's are 
\begin_inset Formula $true$
\end_inset

 in 
\begin_inset Formula $I$
\end_inset

, and is 
\begin_inset Formula $false$
\end_inset

 otherwise.
 
\end_layout

\begin_layout Itemize
A rule 
\begin_inset Formula $h\IF b$
\end_inset

 is 
\begin_inset Formula $false$
\end_inset

 in 
\begin_inset Formula $I$
\end_inset

 if 
\begin_inset Formula $b$
\end_inset

 is 
\begin_inset Formula $true$
\end_inset

 in 
\begin_inset Formula $I$
\end_inset

 and 
\begin_inset Formula $h$
\end_inset

 is 
\begin_inset Formula $false$
\end_inset

 in 
\begin_inset Formula $I$
\end_inset

.
 The rule is 
\begin_inset Formula $true$
\end_inset

 otherwise.
 
\end_layout

\begin_layout Itemize
A knowledge base 
\begin_inset Formula $KB$
\end_inset

 is 
\begin_inset Formula $true$
\end_inset

 in 
\begin_inset Formula $I$
\end_inset

 if and only if every clause in 
\begin_inset Formula $KB$
\end_inset

 is 
\begin_inset Formula $true$
\end_inset

 in 
\begin_inset Formula $I$
\end_inset

.
 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Models and logical consequence
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
A 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

model
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 of a set of clauses is an interpretation in which all the clauses are 
\emph on
true
\emph default
.
\end_layout

\begin_layout Itemize
Assuming that 
\begin_inset Formula $KB$
\end_inset

 is a set of clauses and 
\begin_inset Formula $g$
\end_inset

 is a body:
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $g$
\end_inset

 is a 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

logical consequence
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 of 
\begin_inset Formula $KB$
\end_inset

, written 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $KB\models g$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

,
\begin_inset Newline newline
\end_inset

 if 
\begin_inset Formula $g$
\end_inset

 is 
\emph on
true
\emph default
 in every model of 
\begin_inset Formula $KB$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Itemize
That is, 
\begin_inset Formula $KB\models g$
\end_inset

 if there is no interpretation in which 
\begin_inset Formula $KB$
\end_inset

 is 
\emph on
true
\emph default
 and 
\begin_inset Formula $g$
\end_inset

 is 
\emph on
false
\emph default
.
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Simple example
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset VSpace -15mm
\end_inset


\begin_inset Formula 
\begin{eqnarray*}
KB & = & \left\{ \begin{array}{l}
p\IF q.\\
q.\\
r\IF s.
\end{array}\right.
\end{eqnarray*}

\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="6">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

%& $
\backslash
pi(p)$ &  $
\backslash
pi(q)$ &  $
\backslash
pi(r)$ &  $
\backslash
pi(s)$ 
\backslash

\backslash

\backslash
cline{1-5}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $p$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $q$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $r$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $s$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space \hspace{}
\length 1em
\end_inset

model?
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $I_{1}$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
TRUE
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
TRUE
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
TRUE
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
TRUE
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
visible<2->{
\backslash
hspace{1em}is a model of $KB$}
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $I_{2}$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
FALSE
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
FALSE
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
FALSE
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
FALSE
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
visible<2->{
\backslash
hspace{1em}not a model of $KB$}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $I_{3}$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
TRUE
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
TRUE
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
FALSE
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
FALSE
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
visible<2->{
\backslash
hspace{1em}is a model of $KB$}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $I_{4}$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
TRUE
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
TRUE
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
TRUE
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
FALSE
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
visible<2->{
\backslash
hspace{1em}is a model of $KB$}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $I_{5}$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
TRUE
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
TRUE
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
FALSE
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
TRUE
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
visible<2->{
\backslash
hspace{1em}not a model of $KB$}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Which of 
\begin_inset Formula $p,q,r,s,t$
\end_inset

 logically follow from KB?
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
visible
\end_layout

\end_inset

<2->
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $KB\models p$
\end_inset

, 
\begin_inset Formula $KB\models q$
\end_inset

, 
\begin_inset Formula $KB\notmodels r$
\end_inset

, 
\begin_inset Formula $KB\notmodels s$
\end_inset

, 
\begin_inset Formula $KB\notmodels t$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
User's view of semantics
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Description
Step
\begin_inset space ~
\end_inset

1 Choose a task domain: 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

intended interpretation.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Description
Step
\begin_inset space ~
\end_inset

2 Associate an atom with each proposition you want to represent.
 
\end_layout

\begin_layout Description
Step
\begin_inset space ~
\end_inset

3 Tell the system clauses that are true in the intended interpretation:
 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

axiomatizing the domain.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Description
Step
\begin_inset space ~
\end_inset

4 Ask questions about the intended interpretation.
 
\end_layout

\begin_deeper
\begin_layout Itemize
If 
\begin_inset Formula $KB\models g$
\end_inset

, then 
\begin_inset Formula $g$
\end_inset

 must be true in the intended interpretation.
 
\end_layout

\end_deeper
\begin_layout Description
Step
\begin_inset space ~
\end_inset

5 Users can interpret the answer using their intended interpretation of
 the symbols.
 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Computer's view of semantics
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
The computer doesn't have access to the intended interpretation.
 
\end_layout

\begin_deeper
\begin_layout Itemize
All it knows is the knowledge base 
\begin_inset Formula $KB$
\end_inset

.
 
\end_layout

\end_deeper
\begin_layout Itemize
It can determine if a formula is a logical consequence of 
\emph on
KB
\emph default
.
 
\end_layout

\begin_layout Itemize
If 
\begin_inset Formula $KB\models g$
\end_inset

 then 
\begin_inset Formula $g$
\end_inset

 must be true in the intended interpretation.
 
\end_layout

\begin_layout Itemize
If 
\begin_inset Formula $KB\notmodels g$
\end_inset

 then there is a model of 
\begin_inset Formula $KB$
\end_inset

 in which 
\begin_inset Formula $g$
\end_inset

 is false.
 
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

This could be the intended interpretation! 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Example: Electrical environment
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/ch05/powerc.pdf
	width 85text%

\end_inset

 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Representing the electrical environment
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard

\size small
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "15text%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{code}
\end_layout

\begin_layout Plain Layout


\backslash
head{light
\backslash
_l_1.}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
head{light
\backslash
_l_2.}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
head{down
\backslash
_s_1.}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
head{up
\backslash
_s_2.}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
head{up
\backslash
_s_3.}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
head{ok
\backslash
_l_1.}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
head{ok
\backslash
_l_2.}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
head{ok
\backslash
_cb_1.}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
head{ok
\backslash
_cb_2.}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
head{live
\backslash
_outside.}
\end_layout

\begin_layout Plain Layout


\backslash
end{code}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "55text%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\noindent

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{code}
\end_layout

\begin_layout Plain Layout


\backslash
head{lit
\backslash
_l_1 
\backslash
IF live
\backslash
_w_0 
\backslash
AND ok
\backslash
_l_1}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
head{live
\backslash
_w_0 
\backslash
IF live
\backslash
_w_1 
\backslash
AND up
\backslash
_s_2.}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
head{live
\backslash
_w_0 
\backslash
IF live
\backslash
_w_2 
\backslash
AND down
\backslash
_s_2.}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
head{live
\backslash
_w_1 
\backslash
IF live
\backslash
_w_3 
\backslash
AND up
\backslash
_s_1.}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
head{live
\backslash
_w_2 
\backslash
IF live
\backslash
_w_3 
\backslash
AND down
\backslash
_s_1.}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
head{lit
\backslash
_l_2 
\backslash
IF live
\backslash
_w_4 
\backslash
AND ok
\backslash
_l_2.}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
head{live
\backslash
_w_4 
\backslash
IF live
\backslash
_w_3 
\backslash
AND up
\backslash
_s_3.}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
head{live
\backslash
_p_1 
\backslash
IF live
\backslash
_w_3.}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
head{live
\backslash
_w_3 
\backslash
IF live
\backslash
_w_5 
\backslash
AND ok
\backslash
_cb_1.}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
head{live
\backslash
_p_2 
\backslash
IF live
\backslash
_w_6.}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
head{live
\backslash
_w_6 
\backslash
IF live
\backslash
_w_5 
\backslash
AND ok
\backslash
_cb_2.}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
head{live
\backslash
_w_5 
\backslash
IF live
\backslash
_outside.}
\end_layout

\begin_layout Plain Layout


\backslash
end{code}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Section
Proofs (5.2.2)
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Proofs
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
A 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

proof
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 is a mechanically derivable demonstration that 
\begin_inset Newline newline
\end_inset

a formula logically follows from a knowledge base.
 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $KB\vdash g$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 means that 
\begin_inset Formula $g$
\end_inset

 can be derived from knowledge base 
\begin_inset Formula $KB$
\end_inset

,
\begin_inset Newline newline
\end_inset

using a proof procedure.
\end_layout

\begin_layout Itemize
Recall that 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $KB\models g$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 means 
\begin_inset Formula $g$
\end_inset

 is true in all models of 
\begin_inset Formula $KB$
\end_inset

.
 
\end_layout

\begin_layout Itemize
A proof procedure is 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

sound
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 if 
\begin_inset Formula $KB\vdash g$
\end_inset

 implies 
\begin_inset Formula $KB\models g$
\end_inset

.
 
\end_layout

\begin_layout Itemize
A proof procedure is 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

complete
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 if 
\begin_inset Formula $KB\models g$
\end_inset

 implies 
\begin_inset Formula $KB\vdash g$
\end_inset

.
 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Subsection
Bottom-up proof procedure (5.2.2.1)
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Bottom-up proof procedure
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
There is one single 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

rule of derivation,
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset Newline newline
\end_inset

a generalized form of 
\emph on
modus ponens
\emph default
: 
\end_layout

\begin_layout Quote
If 
\begin_inset Quotes eld
\end_inset


\begin_inset Formula $h\leftarrow b_{1}\wedge\ldots\wedge b_{m}$
\end_inset


\begin_inset Quotes erd
\end_inset

 is a clause in the knowledge base, and each 
\begin_inset Formula $b_{i}$
\end_inset

 has been derived, then 
\begin_inset Formula $h$
\end_inset

 can be derived.
 
\end_layout

\begin_layout Itemize
This is called 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

forward chaining
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 on the clause.
\end_layout

\begin_deeper
\begin_layout Standard
(This rule also covers the case when 
\begin_inset Formula $m=0$
\end_inset

.)
\end_layout

\end_deeper
\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Bottom-up proof procedure
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
After this procedure, 
\begin_inset Formula $KB\vdash g$
\end_inset

 iff 
\begin_inset Formula $g\in C$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{pcode}
\end_layout

\begin_layout Plain Layout


\backslash
>$C:=
\backslash
{
\backslash
}$
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
>{
\backslash
bf repeat}
\backslash
=
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
>
\backslash
>{
\backslash
bf select} 
\backslash
=clause ``$h
\backslash
leftarrow b_{1}
\backslash
wedge 
\backslash
ldots 
\backslash
wedge b_{m}$'' in $ KB$ such that
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
>
\backslash
>
\backslash
>$b_{i}
\backslash
in C$ for all $i$, and $h
\backslash
notin C$
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
>
\backslash
>$C:=C
\backslash
cup 
\backslash
{h
\backslash
}$
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
>{
\backslash
bf until} no more clauses can be selected
\end_layout

\begin_layout Plain Layout


\backslash
end{pcode}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Example
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{code}
\end_layout

\begin_layout Plain Layout


\backslash
head{a 
\backslash
IF b 
\backslash
AND c.}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
head{a 
\backslash
IF e 
\backslash
AND f.}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

%
\backslash
head{b 
\backslash
IF d.}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
head{b 
\backslash
IF f 
\backslash
AND k.}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
head{c 
\backslash
IF e.}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
head{d 
\backslash
IF k.}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
head{e.}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
head{f 
\backslash
IF j 
\backslash
AND e.}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
head{f 
\backslash
IF c.}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
head{j 
\backslash
IF c.}
\end_layout

\begin_layout Plain Layout


\backslash
end{code}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Soundness of bottom-up proof procedure
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Assume there is a 
\begin_inset Formula $g$
\end_inset

 such that 
\begin_inset Formula $KB\vdash g$
\end_inset

 and 
\begin_inset Formula $KB\notmodels g$
\end_inset

.
 
\end_layout

\begin_layout Itemize
Then there must be a 
\emph on
first
\emph default
 atom added to 
\begin_inset Formula $C$
\end_inset

 that isn't true in every model of 
\begin_inset Formula $KB$
\end_inset

.
 Call it 
\begin_inset Formula $h$
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Itemize
Let's call this model 
\begin_inset Formula $I$
\end_inset

, in which 
\begin_inset Formula $h$
\end_inset

 isn't 
\emph on
true
\emph default
.
 
\end_layout

\end_deeper
\begin_layout Itemize
There must be a clause in 
\begin_inset Formula $KB$
\end_inset

 of form: 
\begin_inset Formula 
\[
h\leftarrow b_{1}\wedge\ldots\wedge b_{m}
\]

\end_inset

 Each 
\begin_inset Formula $b_{i}$
\end_inset

 is true in 
\begin_inset Formula $I$
\end_inset

, but 
\begin_inset Formula $h$
\end_inset

 is false in 
\begin_inset Formula $I$
\end_inset

.
 So this clause is false in 
\begin_inset Formula $I$
\end_inset

.
 Therefore 
\begin_inset Formula $I$
\end_inset

 isn't a model of 
\begin_inset Formula $KB$
\end_inset

.
 
\end_layout

\begin_layout Itemize
Contradiction.
 
\end_layout

\begin_layout Standard
Therefore, 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

if 
\begin_inset Formula $KB\vdash g$
\end_inset

 then 
\begin_inset Formula $KB\models g$
\end_inset

.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Fixed point
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
The 
\begin_inset Formula $C$
\end_inset

 generated at the end of the bottom-up algorithm is called a 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

fixed point.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
Let 
\begin_inset Formula $I$
\end_inset

 be the interpretation in which every element of the fixed point is true
 and every other atom is false.
 
\end_layout

\begin_layout Itemize
\begin_inset Formula $I$
\end_inset

 is a model of 
\begin_inset Formula $KB$
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Description
Proof: Suppose 
\begin_inset Formula $h\leftarrow b_{1}\wedge\ldots\wedge b_{m}$
\end_inset

 in 
\begin_inset Formula $KB$
\end_inset

 is false in 
\begin_inset Formula $I$
\end_inset

.
 
\begin_inset Newline newline
\end_inset

Then 
\begin_inset Formula $h$
\end_inset

 is false and each 
\begin_inset Formula $b_{i}$
\end_inset

 is true in 
\begin_inset Formula $I$
\end_inset

.
 
\begin_inset Newline newline
\end_inset

Thus 
\begin_inset Formula $h$
\end_inset

 can be added to 
\begin_inset Formula $C$
\end_inset

.
 
\begin_inset Newline newline
\end_inset

This is a contradiction to 
\begin_inset Formula $C$
\end_inset

 being the fixed point.
 
\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset Formula $I$
\end_inset

 is called a 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

minimal model.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Completeness
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Suppose 
\begin_inset Formula $KB\models g$
\end_inset

.
 
\end_layout

\begin_layout Itemize
Then 
\begin_inset Formula $g$
\end_inset

 is true in all models of 
\begin_inset Formula $KB$
\end_inset

.
 
\end_layout

\begin_layout Itemize
Thus 
\begin_inset Formula $g$
\end_inset

 is true in the minimal model.
 
\end_layout

\begin_layout Itemize
Thus 
\begin_inset Formula $g$
\end_inset

 is in the fixed point.
 
\end_layout

\begin_layout Itemize
Thus 
\begin_inset Formula $g$
\end_inset

 is generated by the bottom up algorithm.
 
\end_layout

\begin_layout Itemize
Thus 
\begin_inset Formula $KB\vdash g$
\end_inset

.
 
\end_layout

\begin_layout Standard
Therefore, 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

if 
\begin_inset Formula $KB\models g$
\end_inset

 then 
\begin_inset Formula $KB\vdash g$
\end_inset

.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Subsection
Top-down proof procedure (5.2.2.2)
\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\select}[1]{{\color{blue}#1}}
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Top-down definite clause proof procedure
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
 A 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

query
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 is a body that we want to determine if it is a logical consequence of 
\begin_inset Formula $KB$
\end_inset

.
\end_layout

\begin_layout Standard

\emph on
Idea
\emph default
: search backward from the query.
\end_layout

\begin_layout Itemize
An 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

answer clause
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 is of the form: 
\begin_inset Formula 
\begin{eqnarray*}
yes & \leftarrow & a_{1}\wedge\dots\wedge\select{a_{i}}\wedge\dots\wedge a_{m}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

SLD resolution
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 of this answer clause on atom 
\begin_inset Formula $a_{i}$
\end_inset

 with the clause: 
\begin_inset Formula 
\begin{eqnarray*}
a_{i} & \leftarrow & b_{1}\wedge\dots\wedge b_{p}
\end{eqnarray*}

\end_inset

 results in the answer clause: 
\begin_inset Formula 
\begin{eqnarray*}
yes & \leftarrow & a_{1}\wedge\dots\wedge a_{i-1}\wedge\select{b_{1}\wedge\dots\wedge b_{p}}\wedge a_{i+1}\wedge\dots\wedge a_{m}
\end{eqnarray*}

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Derivations
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
An 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

answer
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 is an answer clause with 
\begin_inset Formula $m=0$
\end_inset

.
 
\end_layout

\begin_deeper
\begin_layout Itemize
i.e., it is the answer clause 
\begin_inset Quotes eld
\end_inset


\begin_inset Formula $yes\leftarrow$
\end_inset


\begin_inset Quotes erd
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
A 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

derivation
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 of query 
\begin_inset Quotes eld
\end_inset


\begin_inset Formula $?q_{1}\wedge\ldots\wedge q_{k}$
\end_inset


\begin_inset Quotes erd
\end_inset

 from 
\begin_inset Formula $KB$
\end_inset

 is a sequence of answer clauses 
\begin_inset Formula $\gamma_{0},\gamma_{1},\ldots,\gamma_{n}$
\end_inset

 such that 
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $\gamma_{0}$
\end_inset

 is the answer clause 
\begin_inset Quotes eld
\end_inset


\begin_inset Formula $yes\leftarrow q_{1}\wedge\ldots\wedge q_{k}$
\end_inset


\begin_inset Quotes erd
\end_inset

, 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\gamma_{i}$
\end_inset

 is obtained by resolving 
\begin_inset Formula $\gamma_{i-1}$
\end_inset

 with a clause in 
\begin_inset Formula $KB$
\end_inset

, and 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\gamma_{n}$
\end_inset

 is an answer.
 
\end_layout

\end_deeper
\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Top-down definite clause interpreter
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
To solve the query 
\begin_inset Formula $?q_{1}\wedge\ldots\wedge q_{k}$
\end_inset

: 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{pcode}
\end_layout

\begin_layout Plain Layout


\backslash
>$ac:=$ ``$yes
\backslash
leftarrow q_{1}
\backslash
wedge 
\backslash
ldots 
\backslash
wedge q_{k}$''
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
>{
\backslash
bf repeat}
\backslash
=
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
>
\backslash
>{
\backslash
bf select} 
\backslash
=atom $a_i$ from the body of $ac$
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
>
\backslash
>{
\backslash
bf choose} clause $C$ from $KB$ with $a_i$ as head
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
>
\backslash
>replace $a_i$ in the body of $ac$ by the body of $C$
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
>{
\backslash
bf until} $ac$ is an answer
\end_layout

\begin_layout Plain Layout


\backslash
end{pcode}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Nondeterministic choice
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
The top-down interpreter uses two kinds of nondeterministic choice:
\end_layout

\begin_layout Description
don't-care If one selection doesn't lead to a solution, there is no point
 trying other alternatives.
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
\begin_inset Quotes eld
\end_inset

select
\series default
 atom 
\begin_inset Formula $a_{i}$
\end_inset

 from the body of 
\begin_inset Formula $ac$
\end_inset


\series bold

\begin_inset Quotes erd
\end_inset


\end_layout

\end_deeper
\begin_layout Description
don't-know If one choice doesn't lead to a solution, there might be other
 choices that will.
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
\begin_inset Quotes eld
\end_inset

choose
\series default
 clause 
\begin_inset Formula $C$
\end_inset

 from 
\begin_inset Formula $KB$
\end_inset

 with 
\begin_inset Formula $a_{i}$
\end_inset

 as head
\series bold

\begin_inset Quotes erd
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Example: Successful derivation
\end_layout

\end_inset


\begin_inset Formula 
\[
\begin{array}{l@{\hspace{3em}}l@{\hspace{3em}}lcccccccccccccccccccccccccccccc}
a\IF b\AND c & a\IF e\AND f & b\IF f\AND k\\
c\IF e & d\IF k & e\\
f\IF j\AND e & f\IF c & j\IF c
\end{array}
\]

\end_inset

Query: 
\begin_inset Formula $?a$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pause
\end_layout

\end_inset

 
\begin_inset Formula 
\[
\begin{array}{ll@{\hspace{4em}}llccccccccccccccc}
\gamma_{0}: & yes\IF\select a & \qquad & (a\IF e\AND f)\\
\gamma_{1}: & yes\IF\select e\AND f &  & (e)\\
\gamma_{2}: & yes\IF\select f &  & (f\IF c)\\
\gamma_{3}: & yes\IF\select c &  & (c\IF e)\\
\gamma_{4}: & yes\IF\select e &  & (e)\\
\gamma_{5}: & yes\IF
\end{array}
\]

\end_inset


\end_layout

\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Example: Failing derivation
\end_layout

\end_inset


\end_layout

\begin_layout Frame
\begin_inset Formula 
\[
\begin{array}{l@{\hspace{3em}}l@{\hspace{3em}}lcccccccccccccccccccccccccccccc}
a\IF b\AND c & a\IF e\AND f & b\IF f\AND k\\
c\IF e & d\IF k & e\\
f\IF j\AND e & f\IF c & j\IF c
\end{array}
\]

\end_inset


\end_layout

\begin_layout Frame
Query: 
\begin_inset Formula $?a$
\end_inset

 
\begin_inset Formula 
\[
\begin{array}{ll@{\hspace{4em}}llccccccccccccccc}
\gamma_{0}: & yes\IF\select a & \qquad & (a\IF b\AND c)\\
\gamma_{1}: & yes\IF\select b\AND c &  & (b\IF f\AND k)\\
\gamma_{2}: & yes\IF\select f\AND k\AND c &  & (f\IF c)\\
\gamma_{3}: & yes\IF\select{c\AND k\AND c} &  & (c\IF e)\\
\gamma_{4}: & yes\IF\select e\AND k\AND c &  & (e)\\
\gamma_{5}: & yes\IF k\AND c &  & fail
\end{array}
\]

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Query: 
\begin_inset Formula $?a$
\end_inset

 
\begin_inset Formula 
\[
\begin{array}{ll@{\hspace{4em}}llccccccccccccccccccccc}
\gamma_{0}: & yes\IF a\\
\gamma_{1}: & yes\IF b\AND c & \gamma_{2}': & yes\IF f\AND h\AND c\\
\gamma_{2}: & yes\IF d\AND c & \gamma_{3}': & yes\IF g\AND h\AND c\\
\gamma_{3}: & yes\IF h\AND c & \gamma_{4}': & yes\IF c\AND h\AND c\\
 &  & \gamma_{5}': & yes\IF e\AND h\AND c\\
 &  & \gamma_{6}': & yes\IF h\AND c
\end{array}
\]

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Search graph for SLD resolution
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="2">
<features rotate="0" tabularvalignment="bottom">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $a\leftarrow b\wedge c.$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $a\leftarrow g.$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $a\leftarrow h.$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $b\leftarrow j.$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $b\leftarrow k.$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $d\leftarrow m.$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $d\leftarrow p.$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $f\leftarrow m.$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $f\leftarrow p.$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $g\leftarrow m.$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $g\leftarrow f.$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $k\leftarrow m.$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $h\leftarrow m.$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $p.$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $?a\AND d$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Graphics
	filename figures/ch05/sld-searchc.pdf
	width 60text%

\end_inset

 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Section
Ask-the-user and knowledge-level debugging (5.3)
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Electrical domain
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/ch01/powerc.pdf
	width 80text%

\end_inset

 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Users
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
In the electrical domain, what should the house builder know? 
\end_layout

\begin_layout Itemize
What should an occupant know? 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pause
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
Users can't be expected to volunteer knowledge: 
\end_layout

\begin_deeper
\begin_layout Itemize
They don't know what information is needed.
 
\end_layout

\begin_layout Itemize
They don't know what vocabulary to use.
 
\end_layout

\end_deeper
\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{slide}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
slhead
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Ask-the-user
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
Users can provide observations to the system.
 They can answer specific queries.
 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
alert
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Askable
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 atoms are those that a user should be able to observe.
 
\end_layout

\begin_layout Itemize
There are 3 sorts of goals in the top-down proof procedure: 
\end_layout

\begin_deeper
\begin_layout Itemize
Goals for which the user isn't expected to know the answer.
 
\end_layout

\begin_layout Itemize
Askable atoms that may be useful in the proof.
 
\end_layout

\begin_layout Itemize
Askable atoms that the user has already provided information about.
 
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pause
\end_layout

\end_inset

 
\end_layout

\end_deeper
\begin_layout Itemize
The top-down proof procedure can be modified to ask users about askable
 atoms they have not already provided answers for.
 
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{slide}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{slide}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
slhead
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Knowledge-level explanation
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
alert
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

HOW
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 questions can be used to ask how an atom was proved.
 
\begin_inset Newline newline
\end_inset

 It gives the rule used to prove the atom.
\begin_inset Newline newline
\end_inset

 You can the ask HOW an element of the body of that rules was proved.
\begin_inset Newline newline
\end_inset

 This lets the user explore the proof.
 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
alert
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

WHY
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 questions can be used to ask why a question was asked.
\begin_inset Newline newline
\end_inset

 It provides the rule with the asked atom in the body.
\begin_inset Newline newline
\end_inset

 You can ask WHY the rule in the head was asked.
 
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{slide}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{slide}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
slhead
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Knowledge-level debugging
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Plain Layout
There are four types of non-syntactic errors that can arise in rule-based
 systems: 
\end_layout

\begin_layout Itemize
An incorrect answer is produced: an atom that is false in the intended interpret
ation was derived.
 
\end_layout

\begin_layout Itemize
Some answer wasn't produced: the proof failed when it should have succeeded.
 Some particular true atom wasn't derived.
 
\end_layout

\begin_layout Itemize
The program gets into an infinite loop.
 
\end_layout

\begin_layout Itemize
The system asks irrelevant questions.
 
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{slide}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{slide}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
slhead
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Debugging incorrect answers
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
Suppose atom 
\begin_inset Formula $g$
\end_inset

 was proved but is false in the intended interpretation.
 
\end_layout

\begin_layout Itemize
There must be a rule 
\begin_inset Formula $g\leftarrow a_{1}\AND\dots\AND a_{k}$
\end_inset

 in the knowledge base that was used to prove 
\begin_inset Formula $g$
\end_inset

.
 
\end_layout

\begin_layout Itemize
Either:
\end_layout

\begin_deeper
\begin_layout Itemize
one of the 
\begin_inset Formula $a_{i}$
\end_inset

 is false in the intended interpretation or 
\end_layout

\begin_layout Itemize
all of the 
\begin_inset Formula $a_{i}$
\end_inset

 are true in the intended interpretation.
 
\end_layout

\end_deeper
\begin_layout Itemize
Incorrect answers can be debugged by only answering yes/no questions.
 
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{slide}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{slide}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
slhead
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Electrical environment
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/ch01/powerc.pdf
	width 85text%

\end_inset

 
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{slide}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{slide}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
slhead
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Missing answers
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Plain Layout
If atom 
\begin_inset Formula $g$
\end_inset

 is true in the intended interpretation, but could not be proved, either:
 
\end_layout

\begin_layout Itemize
There is no appropriate rule for 
\begin_inset Formula $g$
\end_inset

.
 
\end_layout

\begin_layout Itemize
There is a rule 
\begin_inset Formula $g\leftarrow a_{1}\AND\ldots\AND a_{k}$
\end_inset

 that should have succeeded.
 
\end_layout

\begin_deeper
\begin_layout Itemize
One of the 
\begin_inset Formula $a_{i}$
\end_inset

 is true in the interpretation and could not be proved.
 
\end_layout

\end_deeper
\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{slide}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Complete knowledge assumption (5.5)
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Complete knowledge assumption
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Often you want to assume that your knowledge is complete.
 
\end_layout

\begin_deeper
\begin_layout Itemize

\emph on
Example
\emph default
: you can state what switches are up and the agent can assume that the other
 switches are down.
\end_layout

\begin_layout Itemize

\emph on
Example
\emph default
: assume that a database of what students are enrolled in a course is complete.
\end_layout

\end_deeper
\begin_layout Itemize
The definite clause language is 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

monotonic:
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
adding clauses can't invalidate a previous conclusion.
\end_layout

\end_deeper
\begin_layout Itemize
Under the 
\emph on
complete knowledge assumption
\emph default
, the system is 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

non-monotonic:
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
adding clauses can invalidate a previous conclusion.
 
\end_layout

\end_deeper
\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Completion of a knowledge base
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Suppose the rules for atom 
\begin_inset Formula $a$
\end_inset

 are, 
\begin_inset Formula 
\begin{eqnarray*}
a\IF b_{1} & \dots & a\IF b_{n}
\end{eqnarray*}

\end_inset

 or equivalently 
\begin_inset Formula $a\leftarrow b_{1}\vee\dots\vee b_{n}$
\end_inset

.
 
\end_layout

\begin_layout Itemize
The 
\emph on
complete knowledge assumption
\emph default
 (CKA) says that 
\begin_inset Newline newline
\end_inset

if
\begin_inset Formula $a$
\end_inset

 is true, one of the 
\begin_inset Formula $b_{i}$
\end_inset

 must be true: 
\begin_inset Formula 
\[
a\rightarrow b_{1}\vee\dots\vee b_{n}
\]

\end_inset


\end_layout

\begin_layout Itemize
Under the CKA, the meaning of the clauses for 
\begin_inset Formula $a$
\end_inset

 are: 
\begin_inset Formula 
\[
a\IFF b_{1}\vee\dots\vee b_{n}
\]

\end_inset

which is called 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Clark's completion.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Clark's completion of a KB
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Clark's completion of a knowledge base consists of the completion of every
 atom.
 
\end_layout

\begin_layout Itemize
If you have an atom 
\begin_inset Formula $a$
\end_inset

 with no clauses, the completion is 
\begin_inset Formula $a\leftrightarrow false$
\end_inset

.
 
\end_layout

\begin_layout Itemize
You can interpret negations in the body of clauses:
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $\negn a$
\end_inset

 means that 
\begin_inset Formula $a$
\end_inset

 is false under the CKA
\end_layout

\begin_layout Itemize
this is 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

negation as failure
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Bottom-up negation-as-failure interpreter
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{pcode}
\end_layout

\begin_layout Plain Layout

$C:=
\backslash
{
\backslash
}$
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

{
\backslash
bf repeat}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
>{
\backslash
bf either}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
>
\backslash
>{
\backslash
bf select} $h$ such that there is a rule
\end_layout

\begin_layout Plain Layout

  ``$h
\backslash
leftarrow b_{1}
\backslash
AND 
\backslash
ldots 
\backslash
AND b_{m}$'' $
\backslash
in KB$
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
>
\backslash
>
\backslash
>
\backslash
>where every $b_{i}
\backslash
in C$, and $h
\backslash
notin C$
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
>
\backslash
>$C:=C
\backslash
cup 
\backslash
{h
\backslash
}$
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
>{
\backslash
bf or}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
>
\backslash
>{
\backslash
bf select} $h$ such that for every rule
\end_layout

\begin_layout Plain Layout

  ``$h
\backslash
leftarrow b_{1}
\backslash
AND 
\backslash
ldots 
\backslash
AND b_{m}$'' $
\backslash
in KB$
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
>
\backslash
>
\backslash
>
\backslash
>either $
\backslash
negn b_{i}
\backslash
in C$ for some $b_{i}$ 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
>
\backslash
>
\backslash
>
\backslash
>or $g 
\backslash
in C$ for some $b_{i}=
\backslash
negn g$ 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
>
\backslash
>$C:=C
\backslash
cup 
\backslash
{
\backslash
negn h
\backslash
}$
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

{
\backslash
bf until} no more selections are possible
\end_layout

\begin_layout Plain Layout


\backslash
end{pcode}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Negation-as-failure example
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{cicode}
\end_layout

\begin_layout Plain Layout


\backslash
head{p
\backslash
leftarrow q
\backslash
AND 
\backslash
negn r.}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
head{p
\backslash
leftarrow s.}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
head{q
\backslash
leftarrow 
\backslash
negn s.}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
head{r
\backslash
leftarrow 
\backslash
negn t.}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
head{t.}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
head{s
\backslash
leftarrow w.}
\end_layout

\begin_layout Plain Layout


\backslash
end{cicode}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Top-down negation-as-failure proof procedure
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
If the proof for 
\begin_inset Formula $a$
\end_inset

 fails, you can conclude 
\begin_inset Formula $\negn a$
\end_inset

.
\end_layout

\begin_layout Standard
Failure can be defined recursively:
\end_layout

\begin_layout Itemize
Suppose you have rules for atom 
\begin_inset Formula $a$
\end_inset

: 
\begin_inset Formula 
\begin{eqnarray*}
a\IF b_{1} & \dots & a\IF b_{n}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Itemize
If each body 
\begin_inset Formula $b_{i}$
\end_inset

 fails, 
\begin_inset Formula $a$
\end_inset

 fails.
\end_layout

\begin_layout Itemize
A body fails if one of the conjuncts in the body fails.
\end_layout

\begin_layout Itemize
Note that you need 
\emph on
finite
\emph default
 failure.
 
\end_layout

\begin_deeper
\begin_layout Itemize
example 
\begin_inset Formula $p\IF p$
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Default reasoning
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Birds fly.
 
\end_layout

\begin_layout Itemize
Emus and tiny birds don't.
 
\end_layout

\begin_layout Itemize
Hummingbirds are tiny birds that can fly.
 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
flies & \leftarrow & bird\wedge\negn ab_{flying}\\
ab_{flying} & \leftarrow & emu\wedge\negn ab_{emu}\\
ab_{flying} & \leftarrow & tiny\wedge\negn ab_{tiny}\\
ab_{tiny} & \leftarrow & hummingbird\wedge\negn ab_{hummingbird}
\end{eqnarray*}

\end_inset


\end_layout

\end_deeper
\begin_layout Separator
\begin_inset Note Note
status open

\begin_layout Separator

\end_layout

\begin_layout Section
Assumption-based reasoning
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Assumption-based reasoning
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Plain Layout
Often we want our agents to make assumptions rather than doing deduction
 from their knowledge.
 For example: 
\end_layout

\begin_layout Itemize
In 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

proof by contradiction
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 an agent makes assumptions which are shown to be false.
 
\end_layout

\begin_layout Itemize
In 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

abduction
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 an agent makes assumptions to explain observations.
 For example, it hypothesizes what could be wrong with a system to produce
 the observed symptoms.
 
\end_layout

\begin_layout Itemize
In 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

default reasoning
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 an agent makes assumptions of normality to make predictions.
 For example, the delivery robot may want to assume Mary is in her office,
 even if it isn't always true.
 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Design and recognition
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Plain Layout
Two different tasks use assumption-based reasoning: 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Design
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 The aim is to design an artifact or plan.
 The designer can select whichever design they like that satisfies the design
 criteria.
 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Recognition
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset Note Note
status open

\begin_layout Plain Layout
In a recognition, prediction, or diagnosis task,
\end_layout

\end_inset

 The aim is to find out what is true based on observations.
 If there are a number of possibilities, the recognizer can't select the
 one they like best.
 The underlying reality is fixed; the aim is to find out what it is.
 
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hilitec
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Compare:
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 Recognizing a disease with designing a treatment.
\begin_inset Newline newline
\end_inset

 Designing a meeting time with determining when it is.
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Subsection
Proof by contradiction (5.4)
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Integrity constraints
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
In the electrical domain, what if we predict that a light should be on,
 but observe that it isn't?
\begin_inset Newline newline
\end_inset

 What can we conclude? 
\end_layout

\begin_layout Itemize
We will expand the definite clause language to include 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

integrity constraints
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 which are rules that imply 
\begin_inset Formula $false$
\end_inset

, where 
\begin_inset Formula $false$
\end_inset

 is an atom that is false in all interpretations.
 
\end_layout

\begin_layout Itemize
This will allow us to make conclusions from a contradiction.
 
\end_layout

\begin_layout Itemize
A definite clause knowledge base is always consistent.
 This won't be true with the rules that imply 
\begin_inset Formula $false$
\end_inset

.
 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Horn clauses
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
An 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

integrity constraint
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 is a clause of the form, 
\begin_inset Formula 
\begin{eqnarray*}
false & \IF & a_{1}\AND\dots\AND a_{k}
\end{eqnarray*}

\end_inset

where the 
\begin_inset Formula $a_{i}$
\end_inset

 are atoms and 
\begin_inset Formula $false$
\end_inset

 is a special atom that is false in all interpretations.
 
\end_layout

\begin_layout Itemize
A 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Horn clause
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 is either a definite clause or an integrity constraint.
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Negative conclusions
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Negations can follow from a Horn clause KB.
 
\end_layout

\begin_layout Itemize
The negation of 
\begin_inset Formula $\alpha$
\end_inset

, written 
\begin_inset Formula $\neg\alpha$
\end_inset

, is a formula that 
\end_layout

\begin_deeper
\begin_layout Itemize
is true in interpretation 
\begin_inset Formula $I$
\end_inset

 if 
\begin_inset Formula $\alpha$
\end_inset

 is false in 
\begin_inset Formula $I$
\end_inset

, and 
\end_layout

\begin_layout Itemize
is false in interpretation 
\begin_inset Formula $I$
\end_inset

 if 
\begin_inset Formula $\alpha$
\end_inset

 is true in 
\begin_inset Formula $I$
\end_inset

.
 
\end_layout

\begin_layout Plain Layout
\begin_inset Note Note
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
item 
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hilitec
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Example:
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 Let the knowledge base 
\begin_inset Formula $KB$
\end_inset

 be 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{code}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
head
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

false
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
leftarrow
\end_layout

\end_inset

 a
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
AND
\end_layout

\end_inset

 b.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
head
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

a
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
leftarrow
\end_layout

\end_inset

 c.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
head
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

b
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
leftarrow
\end_layout

\end_inset

 c.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{code}
\end_layout

\end_inset

 
\begin_inset Formula $KB\models\neg c.$
\end_inset

 
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hilitec
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Example:
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Formula 
\[
KB={\color{dgreen}\left\{ {\color{black}\begin{array}{l}
false\leftarrow a\AND b\\
a\leftarrow c\\
b\leftarrow c
\end{array}}\right\} }\hspace{2em}KB\models\neg c
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Disjunctive conclusions
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Disjunctions can follow from a Horn clause KB.
 
\end_layout

\begin_layout Itemize
The disjunction of 
\begin_inset Formula $\alpha$
\end_inset

 and 
\begin_inset Formula $\beta$
\end_inset

, written 
\begin_inset Formula $\alpha\vee\beta$
\end_inset

, is 
\end_layout

\begin_deeper
\begin_layout Itemize
true in interpretation 
\begin_inset Formula $I$
\end_inset

 if 
\begin_inset Formula $\alpha$
\end_inset

 is true in 
\begin_inset Formula $I$
\end_inset

 or 
\begin_inset Formula $\beta$
\end_inset

 is true in 
\begin_inset Formula $I$
\end_inset

 
\begin_inset Newline newline
\end_inset

(or both are true in 
\begin_inset Formula $I$
\end_inset

).
 
\end_layout

\begin_layout Itemize
false in interpretation 
\begin_inset Formula $I$
\end_inset

 if 
\begin_inset Formula $\alpha$
\end_inset

 and 
\begin_inset Formula $\beta$
\end_inset

 are both false in 
\begin_inset Formula $I$
\end_inset

.
 
\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hilitec
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Example:
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset Formula 
\[
KB={\color{dgreen}\left\{ {\color{black}\begin{array}{l}
false\leftarrow a\AND b\\
a\leftarrow c\\
b\leftarrow d\\
\only<2>{b\IF e}
\end{array}}\right\} }\hspace{2em}\begin{array}{c}
KB\models\neg c\vee\neg d\\
\only<2>{KB\models\neg c\vee\neg e}
\end{array}
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Unsatisfiability
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
It is always possible to find a model for a set of definite clauses.
 
\end_layout

\begin_deeper
\begin_layout Itemize
The interpretation with all atoms true is a model of any set of definite
 clauses.
 
\end_layout

\begin_layout Itemize
Thus, a definite-clause knowledge base is always satisfiable.
 
\end_layout

\end_deeper
\begin_layout Itemize
However, a set of Horn clauses can be unsatisfiable.
\end_layout

\begin_deeper
\begin_layout Itemize

\emph on
Example
\emph default
: The following set of clauses is unsatisfiable: 
\begin_inset Formula 
\[
\{a,false\leftarrow a\}
\]

\end_inset

 There is no interpretation that satisfies both clauses -- both 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $false\IF a$
\end_inset

 cannot be true in any interpretation.
\end_layout

\end_deeper
\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Questions and answers in Horn KBs
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
An 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

assumable
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 is an atom whose negation you are prepared to accept as part of a (disjunctive)
 answer.
 
\end_layout

\begin_layout Itemize
A 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

conflict
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 of 
\begin_inset Formula $KB$
\end_inset

 is a set of assumables that, given 
\begin_inset Formula $KB$
\end_inset

 imply 
\begin_inset Formula $false$
\end_inset

.
 
\end_layout

\begin_layout Itemize
A 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

minimal conflict
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 is a conflict such that no strict subset is also a conflict.
 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Conflict example
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hilitec
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Example:
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 If 
\begin_inset Formula $\{c,d,e,f,g,h\}$
\end_inset

 are the assumables 
\begin_inset Formula 
\[
KB={\color{dgreen}\left\{ {\color{black}\begin{array}{l}
false\leftarrow a\AND b\\
a\leftarrow c\\
b\leftarrow d\\
b\leftarrow e
\end{array}}\right\} }
\]

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\{c,d\}$
\end_inset

 is a conflict 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\{c,e\}$
\end_inset

 is a conflict 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\{c,d,e,h\}$
\end_inset

 is a conflict 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Using conflicts for diagnosis
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Assume that the user is able to observe whether a light is lit or dark and
 whether a power outlet is dead or live.
 
\end_layout

\begin_layout Itemize
A light can't be both lit and dark.
 An outlet can't be both live and dead: 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{code}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
head
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

false 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
IF
\end_layout

\end_inset

 dark_l1 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
OAND
\end_layout

\end_inset

 lit_l1.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
head
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

false 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
IF
\end_layout

\end_inset

 dark_l2 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
OAND
\end_layout

\end_inset

 lit_l2.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
head
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

false 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
IF
\end_layout

\end_inset

 dead_p1 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
OAND
\end_layout

\end_inset

 live_p2.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{code}
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
Assume the individual components are working correctly: 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{code}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
head
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

assumable
\begin_inset space ~
\end_inset

ok_l1.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
head
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

assumable
\begin_inset space ~
\end_inset

ok_s2.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
head
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

…
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{code}
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
Suppose switches 
\begin_inset Formula $s_{1}$
\end_inset

, 
\begin_inset Formula $s_{2}$
\end_inset

, and 
\begin_inset Formula $s_{3}$
\end_inset

 are all up:
\begin_inset Newline newline
\end_inset

 
\begin_inset Formula $up\_s_{1}.$
\end_inset

 
\begin_inset Formula $up\_s_{2}.$
\end_inset

 
\begin_inset Formula $up\_s_{3}.$
\end_inset

 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Electrical environment
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/ch05/powercup.pdf
	width 80text%

\end_inset

 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Representing the electrical environment
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "20text%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{code}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
head
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

light_l1.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
head
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

light_l2.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
head
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

up_s1.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
head
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

up_s2.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
head
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

up_s3.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%
\backslash
head{dark
\backslash
_l_1}
\backslash

\backslash

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%
\backslash
head{dark
\backslash
_l_2}
\backslash

\backslash

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

% 
\backslash
head{ok
\backslash
_l_1.}
\backslash

\backslash

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

% 
\backslash
head{ok
\backslash
_l_2.}
\backslash

\backslash

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

% 
\backslash
head{ok
\backslash
_cb_1.}
\backslash

\backslash

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

% 
\backslash
head{ok
\backslash
_cb_2.}
\backslash

\backslash

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
head
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

live_outside.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{code}
\end_layout

\end_inset

 
\end_layout

\end_inset


\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "65text%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{code}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
head
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

lit_l1 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
IF
\end_layout

\end_inset

 live_w0 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
AND
\end_layout

\end_inset

 ok_l1.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
head
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

live_w0 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
IF
\end_layout

\end_inset

 live_w1 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
AND
\end_layout

\end_inset

 up_s2 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
AND
\end_layout

\end_inset

 ok_s2.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
head
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

live_w0 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
IF
\end_layout

\end_inset

 live_w2 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
AND
\end_layout

\end_inset

 down_s2 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
AND
\end_layout

\end_inset

 ok_s2.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
head
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

live_w1 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
IF
\end_layout

\end_inset

 live_w3 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
AND
\end_layout

\end_inset

 up_s1 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
AND
\end_layout

\end_inset

 ok_s1.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
head
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

live_w2 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
IF
\end_layout

\end_inset

 live_w3 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
AND
\end_layout

\end_inset

 down_s1 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
AND
\end_layout

\end_inset

 ok_s1.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
head
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

lit_l2 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
IF
\end_layout

\end_inset

 live_w4 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
AND
\end_layout

\end_inset

 ok_l2.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
head
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

live_w4 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
IF
\end_layout

\end_inset

 live_w3 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
AND
\end_layout

\end_inset

 up_s3 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
AND
\end_layout

\end_inset

 ok_s3.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
head
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

live_p1 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
IF
\end_layout

\end_inset

 live_w3.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
head
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

live_w3 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
IF
\end_layout

\end_inset

 live_w5 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
AND
\end_layout

\end_inset

 ok_cb1.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
head
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

live_p2 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
IF
\end_layout

\end_inset

 live_w6.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
head
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

live_w6 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
IF
\end_layout

\end_inset

 live_w5 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
AND
\end_layout

\end_inset

 ok_cb2.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
head
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

live_w5 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
IF
\end_layout

\end_inset

 live_outside.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{code}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout

\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Itemize
If the user has observed 
\begin_inset Formula $l_{1}$
\end_inset

 and 
\begin_inset Formula $l_{2}$
\end_inset

 are both dark: 
\begin_inset Formula 
\[
dark\_l_{1}.~dark\_l_{2}.
\]

\end_inset


\end_layout

\begin_layout Itemize
There are two minimal conflicts: 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{code}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
head
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

{ok_cb1,ok_s1,ok_s2,ok_l1} 
\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 1
width ""
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
and
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
head
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

{ok_cb1,ok_s3,ok_l2}.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{code}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
We can derive: 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{code}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
head
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
neg
\end_layout

\end_inset

 ok_cb1
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
vee
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
neg
\end_layout

\end_inset

 ok_s1
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
vee
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
neg
\end_layout

\end_inset

 ok_s2
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
vee
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
neg
\end_layout

\end_inset

 ok_l1
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
head
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
neg
\end_layout

\end_inset

 ok_cb1
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
vee
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
neg
\end_layout

\end_inset

 ok_s3
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
vee
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
neg
\end_layout

\end_inset

 ok_l2.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{code}
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
Either 
\begin_inset Formula $cb_{1}$
\end_inset

 is broken or there is one of six double faults.
 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Diagnoses
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
A 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

consistency-based diagnosis
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 is a set of assumables that has at least one element in each conflict.
 
\end_layout

\begin_layout Itemize
A 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

minimal diagnosis
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 is a diagnosis such that no subset is also a diagnosis.
 
\end_layout

\begin_layout Itemize
Intuitively, one of the minimal diagnoses must hold.
 A diagnosis holds if all of its elements are false.
 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hilitec
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Example:
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 For the proceeding example there are seven minimal diagnoses: 
\begin_inset Formula $\{ok\_cb_{1}\}$
\end_inset

, 
\begin_inset Formula $\{ok\_s_{1},ok\_s_{3}\}$
\end_inset

, 
\begin_inset Formula $\{ok\_s_{1},ok\_l_{2}\}$
\end_inset

, 
\begin_inset Formula $\{ok\_s_{2},ok\_s_{3}\}$
\end_inset

,\SpecialChar \ldots{}

\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Recall: Top-down consequence finding
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Plain Layout
To solve the query 
\begin_inset Formula $?q_{1}\wedge\ldots\wedge q_{k}$
\end_inset

: 
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{pcode}
\end_layout

\begin_layout Plain Layout


\backslash
>$ac:=$ ``$yes
\backslash
leftarrow q_{1}
\backslash
wedge 
\backslash
ldots 
\backslash
wedge q_{k}$''
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
>{
\backslash
bf repeat}
\backslash
=
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
>
\backslash
>{
\backslash
bf select} 
\backslash
=atom $a_i$ from the body of $ac$
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
>
\backslash
>{
\backslash
bf choose} clause $C$ from $KB$ with $a_i$ as head
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
>
\backslash
>replace $a_i$ in the body of $ac$ by the body of $C$
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
>{
\backslash
bf until} $ac$ is an answer
\end_layout

\begin_layout Plain Layout


\backslash
end{pcode}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Implementing conflict finding: Top down
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Query is 
\begin_inset Formula $false$
\end_inset

.
 
\end_layout

\begin_layout Itemize
Don't select an atom that is assumable.
 
\end_layout

\begin_layout Itemize
Stop when all of the atoms in the body of the generalised query are assumable:
 
\end_layout

\begin_deeper
\begin_layout Itemize
this is a conflict 
\end_layout

\end_deeper
\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Example
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{code}
\end_layout

\begin_layout Plain Layout


\backslash
head{false 
\backslash
IF a.}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
head{a 
\backslash
IF b 
\backslash
OAND c.}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
head{b 
\backslash
IF d.}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
head{b 
\backslash
IF e.}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
head{c 
\backslash
IF f.}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
head{c 
\backslash
IF g.}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
head{e 
\backslash
IF h 
\backslash
OAND w.}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
head{e 
\backslash
IF g.}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
head{w 
\backslash
IF f.}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
head{
\backslash
mbox{assumable } d,f,g,h.}
\end_layout

\begin_layout Plain Layout


\backslash
end{code}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Bottom-up conflict finding
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Conclusions
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 are pairs 
\begin_inset Formula $\tuple{a,A}$
\end_inset

, where 
\begin_inset Formula $a$
\end_inset

 is an atom and 
\begin_inset Formula $A$
\end_inset

 is a set of assumables that imply 
\begin_inset Formula $a$
\end_inset

.
 
\end_layout

\begin_layout Itemize
Initially, conclusion set 
\begin_inset Formula $C=\{\tuple{a,\{a\}}:a\textnormal{is assumable}\}$
\end_inset

.
 
\end_layout

\begin_layout Itemize
If there is a rule 
\begin_inset Formula $h\leftarrow b_{1}\AND\ldots\AND b_{m}$
\end_inset

 such that
\begin_inset Newline newline
\end_inset

 for each 
\begin_inset Formula $b_{i}$
\end_inset

 there is some 
\begin_inset Formula $A_{i}$
\end_inset

 such that 
\begin_inset Formula $\tuple{b_{i},A_{i}}\in C$
\end_inset

, 
\begin_inset Newline newline
\end_inset

then 
\begin_inset Formula $\tuple{h,A_{1}\cup\ldots\cup A_{m}}$
\end_inset

 can be added to 
\begin_inset Formula $C$
\end_inset

.
 
\end_layout

\begin_layout Itemize
If 
\begin_inset Formula $\tuple{a,A_{1}}$
\end_inset

 and 
\begin_inset Formula $\tuple{a,A_{2}}$
\end_inset

 are in 
\begin_inset Formula $C$
\end_inset

, where 
\begin_inset Formula $A_{1}\subset A_{2}$
\end_inset

, 
\begin_inset Newline newline
\end_inset

then 
\begin_inset Formula $\tuple{a,A_{2}}$
\end_inset

 can be removed from 
\begin_inset Formula $C$
\end_inset

.
 
\end_layout

\begin_layout Itemize
If 
\begin_inset Formula $\tuple{false,A_{1}}$
\end_inset

 and 
\begin_inset Formula $\tuple{a,A_{2}}$
\end_inset

 are in 
\begin_inset Formula $C$
\end_inset

, where 
\begin_inset Formula $A_{1}\subseteq A_{2}$
\end_inset

, 
\begin_inset Newline newline
\end_inset

then 
\begin_inset Formula $\tuple{a,A_{2}}$
\end_inset

 can be removed from 
\begin_inset Formula $C$
\end_inset

.
 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Bottom-up conflict finding code
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{pcode}
\end_layout

\begin_layout Plain Layout

$C:=
\backslash
{
\backslash
tuple{a,
\backslash
{a
\backslash
}}:a$ is assumable$
\backslash
}$
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

{
\backslash
bf repeat}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
>{
\backslash
bf select} clause ``$h
\backslash
leftarrow b_{1}
\backslash
AND 
\backslash
ldots 
\backslash
AND b_{m}$'' in $T$ such that
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
>
\backslash
>$
\backslash
tuple{b_{i},A_{i}}
\backslash
in C$ for all $i$ and
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
>
\backslash
>there is no $ 
\backslash
tuple{h,A'}
\backslash
in C$ or $ 
\backslash
tuple{false,A'}
\backslash
in C$
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
>
\backslash
>
\backslash
>such that $A'
\backslash
subseteq A$ where $A=A_{1}
\backslash
cup 
\backslash
ldots 
\backslash
cup A_{m}$
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
>$C:=C
\backslash
cup 
\backslash
{
\backslash
tuple{h,A}
\backslash
}$
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
>Remove any elements of $C$ that can now be pruned
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

{
\backslash
bf until} no more selections are possible
\end_layout

\begin_layout Plain Layout


\backslash
end{pcode}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Subsection
Abduction (5.6)
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
The assumption-based framework
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Plain Layout
The assumption-based framework is defined in terms of two sets of formulae:
 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $F$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 is a set of closed formula called the 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

facts
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

.
 
\begin_inset Newline newline
\end_inset

 These are formulae that are given as true in the world.
\begin_inset Newline newline
\end_inset

 We assume 
\begin_inset Formula $F$
\end_inset

 are Horn clauses.
 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $H$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 is a set of formulae called the 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

possible hypotheses
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 or 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

assumables.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 Ground instance of the possible hypotheses can be assumed if consistent.
 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Making assumptions
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
A 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

scenario
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 of 
\begin_inset Formula $\tuple{F,H}$
\end_inset

 is a set 
\begin_inset Formula $D$
\end_inset

 of ground instances of elements of 
\begin_inset Formula $H$
\end_inset

 such that 
\begin_inset Formula $F\cup D$
\end_inset

 is satisfiable.
 
\end_layout

\begin_layout Itemize
An 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

explanation
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 of 
\begin_inset Formula $g$
\end_inset

 from 
\begin_inset Formula $\tuple{F,H}$
\end_inset

 is a scenario that, together with 
\begin_inset Formula $F$
\end_inset

, implies 
\begin_inset Formula $g$
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Plain Layout
\begin_inset Formula $D$
\end_inset

 is an explanation of 
\begin_inset Formula $g$
\end_inset

 if 
\begin_inset Formula $F\cup D\models g$
\end_inset

 and 
\begin_inset Formula $F\cup D\not\models false$
\end_inset

.
\end_layout

\begin_layout Plain Layout
A 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

minimal explanation
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 is an explanation such that no strict subset is also an explanation.
 
\end_layout

\end_deeper
\begin_layout Itemize
An 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

extension
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 of 
\begin_inset Formula $\tuple{F,H}$
\end_inset

 is the set of logical consequences of 
\begin_inset Formula $F$
\end_inset

 and a maximal scenario of 
\begin_inset Formula $\tuple{F,H}$
\end_inset

.
 
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

%A scenario $D$ is maximal if there is no scenario $D'$ that is a
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

%strict superset of $D$.
 
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Example
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "32text%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset Formula 
\[
\begin{array}{l}
\head{a\IF b\AND c.}\\
\head{b\IF e.}\\
\head{b\IF h.}\\
\head{c\IF g.}\\
\head{c\IF f.}\\
\head{d\IF g.}\\
\head{false\IF e\AND d.}\\
\head{f\IF h\AND m.}\\
\head{\mbox{assumable }e,h,g,m,n.}
\end{array}
\]

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "65text%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Itemize
\begin_inset Formula $\{e,m,n\}$
\end_inset

 is a scenario.
 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\{e,g,m\}$
\end_inset

 is not a scenario.
 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\{h,m\}$
\end_inset

 is an explanation for 
\begin_inset Formula $a$
\end_inset

.
 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\{e,h,m\}$
\end_inset

 is an explanation for 
\begin_inset Formula $a$
\end_inset

.
 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\{e,g,h,m\}$
\end_inset

 isn't an explanation.
 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\{e,h,m,n\}$
\end_inset

 is a maximal scenario.
 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\{h,g,m,n\}$
\end_inset

 is a maximal scenario.
 
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Default reasoning and abduction
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Plain Layout
There are two strategies for using the assumption-based framework: 
\end_layout

\begin_layout Description
Default
\begin_inset space ~
\end_inset

reasoning Where the truth of 
\begin_inset Formula $g$
\end_inset

 is unknown and is to be determined.
 An explanation for 
\begin_inset Formula $g$
\end_inset

 corresponds to an 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

argument
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 for 
\begin_inset Formula $g$
\end_inset

.
 
\end_layout

\begin_layout Description
Abduction Where 
\begin_inset Formula $g$
\end_inset

 is given, and we are interested in explaining it.
 
\begin_inset Formula $g$
\end_inset

 could be an observation in a recognition task or a design goal in a design
 task.
 
\end_layout

\begin_layout Plain Layout
Give observations, we typically do abduction, then default reasoning to
 find consequences.
 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Computing explanations
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Plain Layout
To find assumables to imply the query 
\begin_inset Formula $?q_{1}\wedge\ldots\wedge q_{k}$
\end_inset

: 
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{pcode}
\end_layout

\begin_layout Plain Layout


\backslash
>$ac:=$ ``$yes
\backslash
leftarrow q_{1}
\backslash
wedge 
\backslash
ldots 
\backslash
wedge q_{k}$''
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
>{
\backslash
bf repeat}
\backslash
=
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
>
\backslash
>{
\backslash
bf select} 
\backslash
=non-assumable atom $a_i$ from the body of $ac$
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
>
\backslash
>{
\backslash
bf choose} clause $C$ from $KB$ with $a_i$ as head
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
>
\backslash
>replace $a_i$ in the body of $ac$ by the body of $C$
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
>{
\backslash
bf until} all atoms in the body of $ac$ are assumable.
\end_layout

\begin_layout Plain Layout


\backslash
end{pcode}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
To find an explanation of query 
\begin_inset Formula $?q_{1}\wedge\ldots\wedge q_{k}$
\end_inset

: 
\end_layout

\begin_layout Itemize
find assumables to imply 
\begin_inset Formula $?q_{1}\wedge\ldots\wedge q_{k}$
\end_inset

 
\end_layout

\begin_layout Itemize
ensure that no subset of the assumables found implies 
\begin_inset Formula $false$
\end_inset

 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\end_inset


\end_layout

\end_body
\end_document
