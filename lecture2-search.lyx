#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass beamer
\begin_preamble
\usepackage{cibeamer}
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package none
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 10
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 0
\use_package cancel 0
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 0
\use_package mhchem 0
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%% Lecture for Artificial Intelligence, Chapter 3, http://artint.info 
\end_layout

\begin_layout Plain Layout

%% Copyright David L.
 Poole and Alan K.
 Mackworth, 2010-2013
\end_layout

\begin_layout Plain Layout

%% Copyright Peter Ljunglöf, 2015
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

%% This work is licensed under CC BY-NC-SA 4.0, the Creative Commons
\end_layout

\begin_layout Plain Layout

%% Attribution-NonCommercial-ShareAlike 4.0 International License.
 
\end_layout

\begin_layout Plain Layout

%% To view a copy of this license: http://creativecommons.org/licenses/by-nc-sa/4.
0/
\end_layout

\end_inset


\end_layout

\begin_layout Title (Plain Frame)
Chapter 3: Classical search algorithms
\end_layout

\begin_layout Subtitle
DIT410/TIN173 Artificial Intelligence
\end_layout

\begin_layout Author
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Peter Ljunglöf
\end_layout

\end_inset

Peter Ljunglöf
\begin_inset Newline newline
\end_inset


\size footnotesize

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

(inspired by slides by Poole & Mackworth, Russell & Norvig, et al)
\end_layout

\begin_layout Date
23 March, 2016
\end_layout

\begin_layout PlainFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Outline
\end_layout

\end_inset


\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
AtBeginSubsection[]
\end_layout

\begin_layout Plain Layout

{
\end_layout

\begin_layout Plain Layout

  
\backslash
begin{frame}<beamer>[plain]{Outline}
\end_layout

\begin_layout Plain Layout

    
\backslash
tableofcontents[currentsection,currentsubsection]
\end_layout

\begin_layout Plain Layout

  
\backslash
end{frame}
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout


\backslash
AtBeginSection[]
\end_layout

\begin_layout Plain Layout

{
\end_layout

\begin_layout Plain Layout

  
\backslash
begin{frame}<beamer>[plain]{Outline}
\end_layout

\begin_layout Plain Layout

    
\backslash
tableofcontents[currentsection]
\end_layout

\begin_layout Plain Layout

  
\backslash
end{frame}
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Introduction (Russell & Norvig 3.1--3.3)
\end_layout

\begin_layout Subsection
Graphs and searching
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Searching
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Often we are not given an algorithm to solve a problem, but only a specification
 of what is a solution --- we have to search for a solution.
 
\end_layout

\begin_layout Itemize
A typical problem is when the agent is in one state, it has a set of determinist
ic actions it can carry out, and wants to get to a goal state.
 
\end_layout

\begin_layout Itemize
Many AI problems can be abstracted into the problem of finding a path in
 a directed graph.
 
\end_layout

\begin_layout Itemize
Often there is more than one way to represent a problem as a graph.
 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
State-space Search: Complexity dimensions
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Observable?
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
fully
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Deterministic?
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
deterministic
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Episodic?
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
episodic
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Static?
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
static
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Discrete?
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
discrete
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Number of agents
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
single
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Directed Graphs
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
A 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

graph
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 consists of a set 
\begin_inset Formula $N$
\end_inset

 of 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

nodes
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 and a set 
\begin_inset Formula $A$
\end_inset

 of ordered pairs of nodes, called 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

arcs
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

.
 
\end_layout

\begin_layout Itemize
Node 
\begin_inset Formula $n_{2}$
\end_inset

 is a 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

neighbor
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 of 
\begin_inset Formula $n_{1}$
\end_inset

 if there is an arc from 
\begin_inset Formula $n_{1}$
\end_inset

 to 
\begin_inset Formula $n_{2}$
\end_inset

.
 That is, if 
\begin_inset Formula $\tuple{n_{1},n_{2}}\in A$
\end_inset

.
 
\end_layout

\begin_layout Itemize
A 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

path
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 is a sequence of nodes 
\begin_inset Formula $\tuple{n_{0},n_{1},\ldots,n_{k}}$
\end_inset

 such that 
\begin_inset Formula $\tuple{n_{i-1},n_{i}}\in A$
\end_inset

.
 
\end_layout

\begin_layout Itemize
The 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

length
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 of path 
\begin_inset Formula $\tuple{n_{0},n_{1},\ldots,n_{k}}$
\end_inset

 is 
\begin_inset Formula $k$
\end_inset

.
 
\end_layout

\begin_layout Itemize
A 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

solution
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 is a path from a start node to a goal node, 
\begin_inset Newline newline
\end_inset

given a set of 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

start nodes
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 and 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

goal nodes
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

.
 
\end_layout

\begin_layout Itemize
(Russel & Norvig sometimes call the graph nodes 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

states
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

% 
\backslash
item When there is a 
\backslash
hiliteb{cost} associated with arcs,  the cost of a
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%   path is the sum of the costs of the arcs in the path:
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

% 
\backslash

\backslash
$
\backslash
displaystyle cost(
\backslash
tuple{n_0 ,
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

% n_1 ,
\backslash
ldots, n_k}) = 
\backslash
sum_{i=1}^k cost(
\backslash
tuple{n_{i-1},n_{i}})$
\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

% An 
\backslash
hiliteb{optimal solution} is one with minimum cost.
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Subsection
Examples
\end_layout

\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Example problem: Travel in Romania
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
We want to drive from Arad to Bucharest in Romania.
\begin_inset Newline newline
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/ch03/romania-distances.pdf
	width 90text%

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Example problem: Grid game
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Grid game: Rob needs to collect coins 
\begin_inset Formula $C_{1}$
\end_inset

, 
\begin_inset Formula $C_{2}$
\end_inset

, 
\begin_inset Formula $C_{3}$
\end_inset

, 
\begin_inset Formula $C_{4}$
\end_inset

, 
\begin_inset Newline newline
\end_inset

without running out of fuel, and end up at location 
\begin_inset Formula $(1,1)$
\end_inset

:
\begin_inset Newline newline
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename figures/ch03/GameSearchSpaceSimp.pdf
	width 90text%
	BoundingBox 0bp 100bp 858bp 378bp

\end_inset


\end_layout

\begin_layout Standard
What is a good representation of the 
\begin_inset Flex Alert
status open

\begin_layout Plain Layout
search states
\end_layout

\end_inset

 and the 
\begin_inset Flex Alert
status open

\begin_layout Plain Layout
goal
\end_layout

\end_inset

?
\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Grid game: State representation
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Grid game: Rob needs to collect coins 
\begin_inset Formula $C_{1}$
\end_inset

, 
\begin_inset Formula $C_{2}$
\end_inset

, 
\begin_inset Formula $C_{3}$
\end_inset

, 
\begin_inset Formula $C_{4}$
\end_inset

, 
\begin_inset Newline newline
\end_inset

without running out of fuel, and end up at location 
\begin_inset Formula $(1,1)$
\end_inset

:
\begin_inset Newline newline
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename figures/ch03/GameSearchSpace.pdf
	width 90text%

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Example: A vacuum-cleaning agent
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/ch03/vacuum2-state-space.pdf
	width 60text%

\end_inset


\end_layout

\begin_layout Description
States: 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
only<2>{
\end_layout

\end_inset

tuple [
\emph on
room A dirty?, room B dirty?, robot location
\emph default
]
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Description
Initial
\begin_inset space ~
\end_inset

state: 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
only<2>{
\end_layout

\end_inset

any state
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Description
Actions: 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
only<2>{
\end_layout

\end_inset

left, right, suck, do-nothing
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Description
Goal
\begin_inset space ~
\end_inset

test: 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
only<2>{
\end_layout

\end_inset

[
\emph on
false, false
\emph default
, --]
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Description
Path
\begin_inset space ~
\end_inset

cost: 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
only<2>{
\end_layout

\end_inset

1 per action (0 for do-nothing)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Example: The 8-puzzle
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/ch03/8-puzzle.pdf
	width 60text%

\end_inset


\end_layout

\begin_layout Description
States: 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
only<2>{
\end_layout

\end_inset

a 
\begin_inset Formula $3\times3$
\end_inset

 matrix of integers 
\begin_inset Formula $0\leq n\leq8$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Description
Initial
\begin_inset space ~
\end_inset

state: 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
only<2>{
\end_layout

\end_inset

any state
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Description
Actions: 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
only<2>{
\end_layout

\end_inset

move the blank space: left, right, up, down
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Description
Goal
\begin_inset space ~
\end_inset

test: 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
only<2>{
\end_layout

\end_inset

equal to goal state (given above)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Description
Path
\begin_inset space ~
\end_inset

cost: 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
only<2>{
\end_layout

\end_inset

1 per move
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Example: The 8-queens problem
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/ch03/8queens.pdf
	width 30text%

\end_inset


\end_layout

\begin_layout Description
States: 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
only<2>{
\end_layout

\end_inset

any arrangement of 0 to 8 queens on the board
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Description
Initial
\begin_inset space ~
\end_inset

state: 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
only<2>{
\end_layout

\end_inset

no queens on the board
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Description
Actions: 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
only<2>{
\end_layout

\end_inset

add a queen to any empty square
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Description
Goal
\begin_inset space ~
\end_inset

test: 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
only<2>{
\end_layout

\end_inset

8 queens on the board, none attacked
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Description
Path
\begin_inset space ~
\end_inset

cost: 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
only<2>{
\end_layout

\end_inset

1 per move
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
only<2>{
\end_layout

\end_inset

This gives us 
\begin_inset Formula $64\cdot63\cdot\cdots57\approx1.8\times10^{14}$
\end_inset

 possible sequences to explore!
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Example: The 8-queens problem (alternative)
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/ch03/8queens.pdf
	width 30text%

\end_inset


\end_layout

\begin_layout Description
States: 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
only<2>{
\end_layout

\end_inset

one queen per column in leftmost columns 
\begin_inset Note Note
status open

\begin_layout Plain Layout
, none attacked
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Description
Initial
\begin_inset space ~
\end_inset

state: 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
only<2>{
\end_layout

\end_inset

no queens on the board
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Description
Actions: 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
only<2>{
\end_layout

\end_inset

add a queen to any square in the leftmost empty column, making sure that
 no queen is attacked
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Description
Goal
\begin_inset space ~
\end_inset

test: 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
only<2>{
\end_layout

\end_inset

8 queens on the board, none attacked
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Description
Path
\begin_inset space ~
\end_inset

cost: 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
only<2>{
\end_layout

\end_inset

1 per move
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
only<2>{
\end_layout

\end_inset

Using this formulation, we have only 2,057 sequences!
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Example: Knuth's conjecture
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Donald Knuth has conjectured that every positive integer can be obtained
 by beginning with the number 4 and applying some combination of the factorial,
 square root, and floor functions.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
\left\lfloor \sqrt{\sqrt{\sqrt{\sqrt{\sqrt{(4!)!}}}}}\right\rfloor  & = & 5
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Description
States: positive numbers (1, 2, 3, \SpecialChar \ldots{}
)
\end_layout

\begin_layout Description
Initial
\begin_inset space ~
\end_inset

state: 4
\end_layout

\begin_layout Description
Actions: apply factorial, square root, or floor operation
\end_layout

\begin_layout Description
Goal
\begin_inset space ~
\end_inset

test: any positive integer (e.g., 5)
\end_layout

\begin_layout Description
Path
\begin_inset space ~
\end_inset

cost: 1 per move 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Example: robotic assembly
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/ch03/stanford-arm+blocks.pdf
	width 60text%

\end_inset


\end_layout

\begin_layout Description
States: real-valued coordinates of robot joint angles 
\begin_inset Newline newline
\end_inset

parts of the object to be assembled
\end_layout

\begin_layout Description
Actions: continuous motions of robot joints
\end_layout

\begin_layout Description
Goal
\begin_inset space ~
\end_inset

test: complete assembly of the object
\end_layout

\begin_layout Description
Path
\begin_inset space ~
\end_inset

cost: time to execute 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Subsection
A generic searching algorithm
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
How do we search in a graph?
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Generic search algorithm: given a graph, start nodes, and a goal description,
 incrementally explore paths from the start nodes.
 
\end_layout

\begin_layout Itemize
Maintain a 
\emph on
frontier
\emph default
 of nodes that have been explored.
 
\end_layout

\begin_layout Itemize
As search proceeds, the frontier expands into the unexplored nodes until
 a goal node is encountered.
 
\end_layout

\begin_layout Itemize
The way in which the frontier is expanded defines the 
\emph on

\begin_inset Newline newline
\end_inset

search strategy
\emph default
.
 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Illustration of searching in a graph
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/ch03/searchspc.pdf
	width 70text%

\end_inset

 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
alt<1>{
\end_layout

\end_inset

A generic tree search algorithm
\begin_inset ERT
status open

\begin_layout Plain Layout

}{
\end_layout

\end_inset

Turning tree search into graph search
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{pcode}
\end_layout

\end_inset

 
\series bold

\begin_inset Newline newline
\end_inset

procedure
\series default
 Search(
\emph on
graph, initial-state, goal-state
\emph default
):
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
>
\end_layout

\end_inset


\series bold
initialise
\series default
 
\emph on
frontier
\emph default
 using the 
\emph on
initial-state
\emph default

\begin_inset Newline newline
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
>
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
only<2->{
\end_layout

\end_inset


\series bold
\color magenta
initialise
\series default
 
\emph on
explored-set
\emph default
 to the empty set
\color inherit

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
>
\end_layout

\end_inset


\series bold
while
\series default
 
\emph on
frontier
\emph default
 is not empty:
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
>
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
>
\end_layout

\end_inset


\series bold
select
\series default
 and 
\series bold
remove
\series default
 
\emph on
node
\emph default
 from 
\emph on
frontier
\emph default

\begin_inset Newline newline
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
>
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
>
\end_layout

\end_inset


\series bold
if
\series default
 
\emph on
node.state
\emph default
 is a 
\emph on
goal-state
\series bold
\emph default
 then return
\series default
 
\emph on
node
\emph default

\begin_inset Newline newline
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
>
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
>
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
only<2->{
\end_layout

\end_inset


\series bold
\color magenta
add
\series default
 
\emph on
node
\emph default
 
\series bold
to
\series default
 
\emph on
explored-set
\emph default
\color inherit

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
>
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
>
\end_layout

\end_inset


\series bold
for each 
\series default
\emph on
child
\emph default
 
\series bold
in
\series default
 ExpandChildNodes(
\emph on
node, graph
\emph default
):
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
>
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
>
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
>
\end_layout

\end_inset


\series bold
add
\series default
 
\emph on
child
\emph default
 
\series bold
to
\series default
 
\emph on
frontier
\emph default
 
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
>
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
>
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
>
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
>
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
only<2->{
\end_layout

\end_inset


\series bold
\color magenta
if
\series default
 
\emph on
child
\emph default
 
\series bold
not in
\series default
 
\emph on
frontier
\emph default
 
\series bold
or
\series default
 
\emph on
explored-set
\emph default
\color inherit

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
>
\end_layout

\end_inset


\series bold
return 
\series default
\emph on
failure
\emph default
 
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{pcode}
\end_layout

\end_inset

 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Graph nodes vs.
 search nodes
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Standard
The nodes used while searching are not the same as the graph nodes --
\end_layout

\begin_layout Standard
search nodes contain more information:
\end_layout

\begin_layout Itemize
the corresponding graph node (called 
\emph on
state
\emph default
 in R&N)
\end_layout

\begin_layout Itemize
the total path cost from the start node 
\end_layout

\begin_layout Itemize
the parent node -- for building the final path
\end_layout

\begin_layout Itemize
the action that was used to get here from the parent node
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{pcode}
\end_layout

\end_inset

 
\series bold

\begin_inset Newline newline
\end_inset

procedure
\series default
 ExpandChildNodes(
\emph on
parent, graph
\emph default
):
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
>
\end_layout

\end_inset


\series bold
return
\series default
 {
\emph on
 
\emph default
new Node(state = 
\emph on
result
\emph default
,
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
>
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
>
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
>
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
>
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
>
\end_layout

\end_inset

cost = 
\emph on
parent.cost + stepcost
\emph default
,
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
>
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
>
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
>
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
>
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
>
\end_layout

\end_inset

parent = 
\emph on
parent
\emph default
,
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
>
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
>
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
>
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
>
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
>
\end_layout

\end_inset

action = 
\emph on
action
\emph default
)
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
>
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
>
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
>
\end_layout

\end_inset


\series bold
for each
\series default
 (
\emph on
action, result, stepcost
\emph default
)
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
>
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
>
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
>
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
>
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
>
\end_layout

\end_inset

 
\begin_inset Formula $\in$
\end_inset

 
\emph on
graph.successors
\emph default
(
\emph on
parent.state
\emph default
)
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
>
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
>
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
>
\end_layout

\end_inset

}
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{pcode}
\end_layout

\end_inset

 
\end_layout

\end_deeper
\begin_layout Separator
 
\end_layout

\begin_layout Section
Uninformed search strategies (Russell & Norvig 3.4)
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Learning Objectives
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Plain Layout
At the end of the class you should be able to: 
\end_layout

\begin_layout Itemize
demonstrate how depth-first search will work on a graph 
\end_layout

\begin_layout Itemize
demonstrate how breadth-first search will work on a graph 
\end_layout

\begin_layout Itemize
predict the space and time requirements for depth-first and breadth-first
 searches 
\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Separator

\end_layout

\begin_layout Subsection
Depth-first search
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Depth-first search
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Depth-first search
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 treats the frontier as a stack.
\end_layout

\begin_layout Itemize
It always selects one of the last elements added to the frontier.
 
\end_layout

\begin_layout Itemize
If the list of nodes on the frontier is 
\begin_inset Formula $[p_{1},p_{2},p_{3},\ldots]$
\end_inset

 
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $p_{1}$
\end_inset

 is selected.
 Nodes that extend 
\begin_inset Formula $p_{1}$
\end_inset

 are added to the front of the
\begin_inset space ~
\end_inset

stack (in front of 
\begin_inset Formula $p_{2}$
\end_inset

).
 
\end_layout

\begin_layout Itemize
\begin_inset Formula $p_{2}$
\end_inset

 is only selected when all nodes from 
\begin_inset Formula $p_{1}$
\end_inset

 have been explored.
 
\end_layout

\end_deeper
\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Illustrative graph: Depth-first search
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/ch03/sgraph_de.pdf
	width 90text%

\end_inset

 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Question time: Depth-first search
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Which shaded goal will a depth-first search find first?
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/ch03/sgraph_bb_template.pdf
	width 70text%

\end_inset

 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Complexity of depth-first search
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Does DFS guarantee to find the path with fewest arcs?
\end_layout

\begin_layout Itemize
What happens on infinite graphs or on graphs with cycles 
\begin_inset Newline newline
\end_inset

if there is a solution?
\end_layout

\begin_layout Itemize
What is the time complexity as a function of the path length?
\end_layout

\begin_layout Itemize
What is the space complexity as a function of the path length?
\end_layout

\begin_layout Itemize
How does the goal affect the search? 
\end_layout

\end_deeper
\begin_layout Separator
 
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Complexity of Depth-first Search
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Depth-first search isn't guaranteed to halt on infinite graphs or on graphs
 with cycles.
\end_layout

\begin_layout Itemize
The space complexity is linear in the size of the path being explored.
\end_layout

\begin_layout Itemize
Search is unconstrained by the goal until it happens to stumble on the goal.
\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Separator

\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Depth-first search: Alternative formulation
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Use the internal call stack as the frontier
\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Separator
 
\end_layout

\begin_layout Subsection
Breadth-first search
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Breadth-first search
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Breadth-first search
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 treats the frontier as a queue.
 
\end_layout

\begin_layout Itemize
It always selects one of the earliest elements added to the frontier.
 
\end_layout

\begin_layout Itemize
If the list of paths on the frontier is 
\begin_inset Formula $[p_{1},p_{2},\ldots,p_{r}]$
\end_inset

: 
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $p_{1}$
\end_inset

 is selected.
 Its neighbors are added to the end of the queue, after 
\begin_inset Formula $p_{r}$
\end_inset

.
 
\end_layout

\begin_layout Itemize
\begin_inset Formula $p_{2}$
\end_inset

 is selected next.
 
\end_layout

\end_deeper
\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Illustrative graph: breadth-first search
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/ch03/sgraph_br.pdf
	width 90text%

\end_inset

 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Complexity of breadth-first search
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Does BFS guarantee to find the path with fewest arcs?
\end_layout

\begin_layout Itemize
What happens on infinite graphs or on graphs with cycles 
\begin_inset Newline newline
\end_inset

if there is a solution?
\end_layout

\begin_layout Itemize
What is the time complexity as a function of the path length?
\end_layout

\begin_layout Itemize
What is the space complexity as a function of the path length?
\end_layout

\begin_layout Itemize
How does the goal affect the search? 
\end_layout

\end_deeper
\begin_layout Separator
 
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Complexity of Breadth-first Search
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Plain Layout
The 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hiliteb{
\end_layout

\end_inset

branching factor
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset

 of a node is the number of its neighbors.
\end_layout

\begin_layout Itemize
If the branching factor for all nodes is finite, breadth-first search is
 guaranteed to find a solution if one exists.
 
\end_layout

\begin_deeper
\begin_layout Plain Layout
It is guaranteed to find the path with fewest arcs.
\end_layout

\end_deeper
\begin_layout Itemize
Time complexity is exponential in the path length:
\end_layout

\begin_deeper
\begin_layout Plain Layout
\begin_inset Formula $b^{n}$
\end_inset

, where 
\begin_inset Formula $b$
\end_inset

 is branching factor, 
\begin_inset Formula $n$
\end_inset

 is path length.
\end_layout

\end_deeper
\begin_layout Itemize
The space complexity is exponential in path length: 
\begin_inset Formula $b^{n}$
\end_inset

.
\end_layout

\begin_layout Itemize
Search is unconstrained by the goal.
\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Question time: Breadth-first search
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Which shaded goal will a breadth-first search find first?
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/ch03/sgraph_bb_template.pdf
	width 70text%

\end_inset

 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Subsection
Uniform-cost search
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Uniform-cost search
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Sometimes there are 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

costs
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 associated with arcs.
 The cost of a path is the sum of the costs of its arcs.
 
\begin_inset Formula 
\[
cost(\tuple{n_{0},\dots,n_{k}})=\sum_{i=1}^{k}\left|\tuple{n_{i-1},n_{i}}\right|
\]

\end_inset

An 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

optimal solution
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 is one with minimum cost.
 
\end_layout

\begin_layout Itemize
At each stage, uniform-cost search selects a path on the frontier with lowest
 cost.
 
\end_layout

\begin_layout Itemize
The frontier is a priority queue ordered by path cost.
 
\end_layout

\begin_layout Itemize
It finds a least-cost path to a goal node.
 
\end_layout

\begin_deeper
\begin_layout Itemize
i.e., uniform-cost search is optimal
\end_layout

\end_deeper
\begin_layout Itemize
When arc costs are equal 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
barrow
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

 breadth-first search.
 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Subsection
Branch-and-bound (3.7.4)
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Depth-first Branch-and-Bound
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Way to combine depth-first search with heuristic information.
 
\end_layout

\begin_layout Itemize
Finds optimal solution.
 
\end_layout

\begin_layout Itemize
Most useful when there are multiple solutions, and we want an optimal one.
 
\end_layout

\begin_layout Itemize
Uses the space of depth-first search.
 
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
item The amount of recomputing the frontier can be controlled.
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Depth-first Branch-and-Bound
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Idea: maintain the cost of the lowest-cost path found to a goal so far,
 call this 
\begin_inset Formula $bound$
\end_inset

.
 
\end_layout

\begin_layout Itemize
If the search encounters a path 
\begin_inset Formula $p$
\end_inset

 such that 
\begin_inset Formula $cost(p)+h(p)\geq bound$
\end_inset

, path 
\begin_inset Formula $p$
\end_inset

 can be pruned.
 
\end_layout

\begin_layout Itemize
If a non-pruned path to a goal is found, it must be better than the previous
 best path.
 This new solution is remembered and 
\begin_inset Formula $bound$
\end_inset

 is set to its cost.
 
\end_layout

\begin_layout Itemize
The search can be a depth-first search to save space.
 
\end_layout

\begin_layout Itemize
How should the bound be initialized? 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Depth-first Branch-and-Bound: Initializing Bound
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
The bound can be initialized to 
\begin_inset Formula $\infty$
\end_inset

.
 
\end_layout

\begin_layout Itemize
The bound can be set to an estimate of the optimal path cost.
 After depth-first search terminates either: 
\end_layout

\begin_deeper
\begin_layout Itemize
A solution was found.
 
\end_layout

\begin_layout Itemize
No solution was found, and no path was pruned 
\end_layout

\begin_layout Itemize
No solution was found, and a path was pruned.
 
\end_layout

\end_deeper
\end_deeper
\end_inset


\end_layout

\begin_layout Separator
 
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Summary of Search Strategies
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="5">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
alert
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Strategy
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
alert
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Frontier Selection
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
alert
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Complete
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
alert
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Halts
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
alert
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Space
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Depth-first 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Last node added 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
uncover
\end_layout

\end_inset

<2->
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

No
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
uncover
\end_layout

\end_inset

<2->
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

No
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
uncover
\end_layout

\end_inset

<2->
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Linear
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Breadth-first 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
First node added 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
uncover
\end_layout

\end_inset

<2->
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Yes
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
uncover
\end_layout

\end_inset

<2->
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

No
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
uncover
\end_layout

\end_inset

<2->
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Exp
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Lowest-cost-first 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Minimal 
\begin_inset Formula $cost(p)$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
uncover
\end_layout

\end_inset

<2->
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Yes
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
uncover
\end_layout

\end_inset

<2->
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

No
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
uncover
\end_layout

\end_inset

<2->
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Exp
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
alert
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Complete
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 --- if there a path to a goal, it can find one, even on infinite graphs.
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
alert
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Halts
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 --- on finite graph (perhaps with cycles).
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
alert
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Space
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 --- as a function of the length of current path 
\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Separator

\end_layout

\begin_layout Section
Heuristic search (Russell & Norvig 3.5--3.6)
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Learning Objectives
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Plain Layout
At the end of the class you should be able to: 
\end_layout

\begin_layout Itemize
devise an useful heuristic function for a problem 
\end_layout

\begin_layout Itemize
demonstrate how best-first and 
\begin_inset Formula $A^{*}$
\end_inset

 search will work on a graph 
\end_layout

\begin_layout Itemize
predict the space and time requirements for best-first and 
\begin_inset Formula $A^{*}$
\end_inset

 search 
\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Heuristic search
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%Previous methods don't use the goal to select a path to explore.
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hilitec
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Idea:
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 don't ignore the goal when selecting paths.
 
\end_layout

\begin_layout Itemize
Often there is extra knowledge that can be used to guide the search: 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

heuristics.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $h(n)$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 is an estimate of the cost of the shortest path from node 
\begin_inset Formula $n$
\end_inset

 to a goal node.
 
\end_layout

\begin_layout Itemize
\begin_inset Formula $h(n)$
\end_inset

 needs to be efficient to compute.
 
\end_layout

\begin_layout Itemize
\begin_inset Formula $h(n)$
\end_inset

 is an 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

underestimate
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 if there is no path from 
\begin_inset Formula $n$
\end_inset

 to a goal with cost less than 
\begin_inset Formula $h(n)$
\end_inset

.
 
\end_layout

\begin_layout Itemize
An 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

admissible heuristic
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 is a nonnegative heuristic function that is an underestimate of the actual
 cost of a path to a goal.
 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Example heuristic functions
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
If the nodes are points on a Euclidean plane and the cost is 
\begin_inset Newline newline
\end_inset

the distance, 
\begin_inset Formula $h(n)$
\end_inset

 can be the straight-line distance (SLD) from 
\begin_inset Formula $n$
\end_inset

 to the closest goal.
 
\end_layout

\begin_layout Itemize
If the nodes are locations and cost is time, we can use the distance to
 a goal divided by the maximum speed, 
\begin_inset Formula $h(n)=d(n)/v_{\max}$
\end_inset

.
 
\end_layout

\begin_layout Itemize
If the goal is to collect all of the coins and not run out of fuel, 
\begin_inset Newline newline
\end_inset

we can use an estimate of how many steps it will take to collect the rest
 of the coins and return to goal position, without caring about the fuel
 consumption.
\end_layout

\begin_layout Itemize
A heuristic function can be found by solving a simpler (less
\begin_inset space ~
\end_inset

constrained) version of the problem.
 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Example heuristic: Romania
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/ch03/romania2.pdf
	width 100text%

\end_inset

 
\end_layout

\end_deeper
\begin_layout Subsection
Greedy best-first search
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Greedy best-first search
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hilitec
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Idea:
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 select the path whose end is closest to a goal according to the heuristic
 function.
 
\end_layout

\begin_layout Itemize
Best-first search selects a path on the frontier with minimal 
\begin_inset Formula $h$
\end_inset

-value.
 
\end_layout

\begin_layout Itemize
It treats the frontier as a priority queue ordered by 
\begin_inset Formula $h$
\end_inset

.
 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Example: Romania
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
only<1>{
\end_layout

\end_inset


\begin_inset Graphics
	filename figures/ch03/greedy-progress01c.pdf
	width 100text%

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\backslash
only<2>{
\end_layout

\end_inset


\begin_inset Graphics
	filename figures/ch03/greedy-progress02c.pdf
	width 100text%

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\backslash
only<3>{
\end_layout

\end_inset


\begin_inset Graphics
	filename figures/ch03/greedy-progress03c.pdf
	width 100text%

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\backslash
only<4->{
\end_layout

\end_inset


\begin_inset Graphics
	filename figures/ch03/greedy-progress04c.pdf
	width 100text%

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
uncover<5->{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hilitec
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\emph on
Note:
\emph default
 This is not the shortest path!
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Best-first search and infinite loops
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/ch03/sgraph_bestc.pdf
	width 50text%

\end_inset

 
\end_layout

\begin_layout Standard
Best-first search might fall into an infinite loop!
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Complexity of Best-first Search
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Does best-first search guarantee to find the path with fewest arcs?
\end_layout

\begin_layout Itemize
What happens on infinite graphs or on graphs with cycles 
\begin_inset Newline newline
\end_inset

if there is a solution?
\end_layout

\begin_layout Itemize
What is the time complexity as a function of the path length?
\end_layout

\begin_layout Itemize
What is the space complexity as a function of the path length?
\end_layout

\begin_layout Itemize
How does the goal affect the search? 
\end_layout

\end_deeper
\begin_layout Separator
 
\end_layout

\begin_layout Separator

\end_layout

\begin_layout Subsection
\begin_inset Formula $A^{*}$
\end_inset

 search
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
\begin_inset Formula $A^{*}$
\end_inset

 search
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $A^{*}$
\end_inset

 search uses both path cost and heuristic values.
 
\end_layout

\begin_layout Itemize
\begin_inset Formula $cost(p)$
\end_inset

 is the cost of path 
\begin_inset Formula $p$
\end_inset

.
 
\end_layout

\begin_layout Itemize
\begin_inset Formula $h(p)$
\end_inset

 estimates the cost from the end of 
\begin_inset Formula $p$
\end_inset

 to a goal.
 
\end_layout

\begin_layout Itemize
\begin_inset Flex Alert
status open

\begin_layout Plain Layout
\begin_inset Formula $f(p)$
\end_inset


\end_layout

\end_inset


\begin_inset Formula $=cost(p)+h(p)$
\end_inset

, estimates the total path cost of going from a start node to a goal via
 
\begin_inset Formula $p$
\end_inset

: 
\begin_inset Formula 
\[
\underbrace{\underbrace{\rule[-2.5pt]{0pt}{5pt}start\;\xrightarrow{\textnormal{path }p}~n\hspace*{-0.4em}}_{{\textstyle cost(p)}}\underbrace{~\xrightarrow{\textnormal{estimate}}~goal\rule[-2.5pt]{0pt}{5pt}}_{{\textstyle h(p)}}}_{{\textstyle f(p)}}
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
\begin_inset Formula $A^{*}$
\end_inset

 search
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $A^{*}$
\end_inset

 is a mix of lowest-cost-first and best-first search.
\end_layout

\begin_layout Itemize
It treats the frontier as a priority queue ordered by 
\begin_inset Formula $f(p)$
\end_inset

.
\end_layout

\begin_layout Itemize
It always selects the node on the frontier with the lowest estimated distance
 from the start to a goal node constrained to
\begin_inset space ~
\end_inset

go via that node.
 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Complexity of 
\begin_inset Formula $A^{*}$
\end_inset

 search
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Does 
\begin_inset Formula $A^{*}$
\end_inset

 search guarantee to find the path with fewest arcs?
\end_layout

\begin_layout Itemize
What happens on infinite graphs or on graphs with cycles 
\begin_inset Newline newline
\end_inset

if there is a solution?
\end_layout

\begin_layout Itemize
What is the time complexity as a function of the path length?
\end_layout

\begin_layout Itemize
What is the space complexity as a function of the path length?
\end_layout

\begin_layout Itemize
How does the goal affect the search? 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Example: Romania
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
only<1>{
\end_layout

\end_inset


\begin_inset Graphics
	filename figures/ch03/astar-progress01c.pdf
	width 100text%

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\backslash
only<2>{
\end_layout

\end_inset


\begin_inset Graphics
	filename figures/ch03/astar-progress02c.pdf
	width 100text%

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\backslash
only<3>{
\end_layout

\end_inset


\begin_inset Graphics
	filename figures/ch03/astar-progress03c.pdf
	width 100text%

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\backslash
only<4>{
\end_layout

\end_inset


\begin_inset Graphics
	filename figures/ch03/astar-progress04c.pdf
	width 100text%

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\backslash
only<5>{
\end_layout

\end_inset


\begin_inset Graphics
	filename figures/ch03/astar-progress05c.pdf
	width 100text%

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\backslash
only<6->{
\end_layout

\end_inset


\begin_inset Graphics
	filename figures/ch03/astar-progress06c.pdf
	width 100text%

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
uncover<7->{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hilitec
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\emph on
Note:
\emph default
 
\begin_inset Formula $A^{*}$
\end_inset

 guarantees that this is the shortest path!
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Admissibility (optimality) of  
\begin_inset Formula $A^{*}$
\end_inset


\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
If there is a solution, 
\begin_inset Formula $A^{*}$
\end_inset

 always finds an optimal one first, if:
\end_layout

\begin_layout Itemize
the branching factor is finite,
\end_layout

\begin_layout Itemize
arc costs are bounded above zero (there is some 
\begin_inset Formula $\epsilon>0$
\end_inset

 such that all of the arc costs are greater than 
\begin_inset Formula $\epsilon$
\end_inset

), and 
\end_layout

\begin_layout Itemize
\begin_inset Formula $h(n)$
\end_inset

 is nonnegative and an underestimate of the cost of the shortest path from
 
\begin_inset Formula $n$
\end_inset

 to a goal node.
 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
\begin_inset Formula $A^{*}$
\end_inset

 always finds a solution
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Formula $A^{*}$
\end_inset

 can always find a solution if there is one, because: 
\end_layout

\begin_layout Itemize
The frontier always contains the initial part of a path to a goal, before
 that goal is selected.
\end_layout

\begin_layout Itemize
\begin_inset Formula $A^{*}$
\end_inset

 halts, because the costs of the paths on the frontier keeps increasing,
 and will eventually exceed any finite number.
 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
\begin_inset Formula $A^{*}$
\end_inset

 finds an optimal solution first
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
The first path to a goal selected is an optimal path, because:
\end_layout

\begin_layout Itemize
The 
\begin_inset Formula $f$
\end_inset

-value for any node on an optimal solution path is less than or equal to
 the 
\begin_inset Formula $f$
\end_inset

-value of an optimal solution.
 
\end_layout

\begin_deeper
\begin_layout Itemize
this is because 
\begin_inset Formula $h$
\end_inset

 is an 
\emph on
underestimate
\emph default
 of the actual cost
\end_layout

\end_deeper
\begin_layout Itemize
Thus, the 
\begin_inset Formula $f$
\end_inset

-value of a node on an optimal solution path is less than the 
\begin_inset Formula $f$
\end_inset

-value for any non-optimal solution.
 
\end_layout

\begin_layout Itemize
Thus, a non-optimal solution can never be chosen while a node exists on
 the frontier that leads to an optimal solution.
\end_layout

\begin_deeper
\begin_layout Itemize
because an element with minimum 
\begin_inset Formula $f$
\end_inset

-value is chosen at each step
\end_layout

\end_deeper
\begin_layout Itemize
So, before it can select a non-optimal solution, it will have to pick all
 of the nodes on an optimal path, including each of the optimal solutions.
\end_layout

\end_deeper
\begin_layout Separator
\begin_inset Note Note
status open

\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Why is 
\begin_inset Formula $A^{*}$
\end_inset

 admissible?
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
If a path 
\begin_inset Formula $p$
\end_inset

 to a goal is selected from a frontier, can there be a shorter path to a
 goal? 
\end_layout

\begin_layout Itemize
Suppose path 
\begin_inset Formula $p'$
\end_inset

 is on the frontier.
 Because 
\begin_inset Formula $p$
\end_inset

 was chosen before 
\begin_inset Formula $p'$
\end_inset

, and 
\begin_inset Formula $h(p)=0$
\end_inset

: 
\begin_inset Formula 
\[
cost(p)\leq cost(p')+h(p').
\]

\end_inset


\end_layout

\begin_layout Itemize
Because 
\begin_inset Formula $h$
\end_inset

 is an underestimate: 
\begin_inset Formula 
\[
cost(p')+h(p')\leq cost(p'')
\]

\end_inset

for any path 
\begin_inset Formula $p''$
\end_inset

 to a goal that extends 
\begin_inset Formula $p'$
\end_inset

.
 
\end_layout

\begin_layout Itemize
So 
\begin_inset Formula $cost(p)\leq cost(p'')$
\end_inset

 for any other path 
\begin_inset Formula $p''$
\end_inset

 to a goal.
\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Illustration: Why is 
\begin_inset Formula $A^{*}$
\end_inset

 admissible?
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Formula $A^{*}$
\end_inset

 gradually adds 
\begin_inset Quotes eld
\end_inset


\begin_inset Formula $f$
\end_inset

-contours
\begin_inset Quotes erd
\end_inset

 of nodes (cf.
\begin_inset space ~
\end_inset

BFS adds layers).
\end_layout

\begin_layout Standard
Contour 
\begin_inset Formula $i$
\end_inset

 has all nodes with 
\begin_inset Formula $f=f_{i}$
\end_inset

, where 
\begin_inset Formula $f_{i}<f_{i+1}$
\end_inset

.
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/ch03/f-circles.pdf
	width 80text%

\end_inset


\end_layout

\end_deeper
\begin_layout Separator
\begin_inset Note Note
status open

\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
How do good heuristics help?
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Plain Layout
Suppose 
\begin_inset Formula $c$
\end_inset

 is the cost of an optimal solution.
 
\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Plain Layout
What happen to a path 
\begin_inset Formula $p$
\end_inset

 where 
\end_layout

\begin_layout Itemize
\begin_inset Formula $cost(p)+h(p)<c$
\end_inset

? 
\end_layout

\begin_layout Itemize
\begin_inset Formula $cost(p)+h(p)=c$
\end_inset

? 
\end_layout

\begin_layout Itemize
\begin_inset Formula $cost(p)+h(p)>c$
\end_inset

? 
\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Plain Layout
How can a better heuristic function help? 
\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Separator

\end_layout

\begin_layout Subsection
Admissible and consistent heuristics
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Example: Admissible heuristics
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
For the 8-puzzle:
\end_layout

\begin_layout Standard
\begin_inset Formula $\qquad h_{1}(n)$
\end_inset

 = number of misplaced tiles
\end_layout

\begin_layout Standard
\begin_inset Formula $\qquad h_{2}(n)$
\end_inset

 = total 
\emph on
Manhattan distance
\emph default
 
\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

(i.e., no.
\begin_inset space ~
\end_inset

of squares from desired location of each tile) 
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/ch03/8-puzzle.pdf
	width 50text%

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\qquad h_{1}(S)$
\end_inset

 = 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
alt<2>{
\end_layout

\end_inset


\begin_inset Formula $8$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}{
\end_layout

\end_inset


\begin_inset Flex Alert
status open

\begin_layout Plain Layout
??
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\qquad h_{2}(S)$
\end_inset

 = 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
alt<2>{
\end_layout

\end_inset


\begin_inset Formula $3+1+2+2+2+3+3+2=18$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}{
\end_layout

\end_inset


\begin_inset Flex Alert
status open

\begin_layout Plain Layout
??
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Dominating heuristics
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
If 
\begin_inset Formula $h_{2}(n)\geq h_{1}(n)$
\end_inset

 for all 
\begin_inset Formula $n$
\end_inset

 (both admissible), then 
\begin_inset Formula $h_{2}$
\end_inset

 
\emph on
dominates
\emph default
 
\begin_inset Formula $h_{1}$
\end_inset

 and is better for search.
 Typical search costs (for 8-puzzle):
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $depth=14$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DFS 
\begin_inset Formula $\approx$
\end_inset

 3,000,000 nodes 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $A^{*}(h_{1})$
\end_inset

 = 539 nodes 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $A^{*}(h_{2})$
\end_inset

 = 113 nodes 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $depth=24$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DFS 
\begin_inset Formula $\approx$
\end_inset

 54,000,000,000 nodes 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $A^{*}(h_{1})$
\end_inset

 = 39,135 nodes 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $A^{*}(h_{2})$
\end_inset

 = 1,641 nodes 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Given any admissible heuristics 
\begin_inset Formula $h_{a}$
\end_inset

, 
\begin_inset Formula $h_{b}$
\end_inset

, 
\begin_inset Formula 
\begin{eqnarray*}
h(n) & = & \max(h_{a}(n),h_{b}(n))
\end{eqnarray*}

\end_inset

 is also admissible and dominates 
\begin_inset Formula $h_{a}$
\end_inset

, 
\begin_inset Formula $h_{b}$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Heuristics from a relaxed problem
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Admissible heuristics can be derived from the exact solution cost 
\begin_inset Newline newline
\end_inset

of a relaxed version of the problem:
\end_layout

\begin_layout Itemize
If the rules of the 8-puzzle are relaxed so that a tile can move 
\emph on
anywhere
\emph default
, then 
\begin_inset Formula $h_{1}(n)$
\end_inset

 gives the shortest solution 
\end_layout

\begin_layout Itemize
If the rules are relaxed so that a tile can move to 
\emph on
any adjacent square
\emph default
, then 
\begin_inset Formula $h_{2}(n)$
\end_inset

 gives the shortest solution
\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
Key point: the optimal solution cost of a relaxed problem 
\begin_inset Newline newline
\end_inset

is never greater than the optimal solution cost of the real problem
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Graph-search = Multiple-path pruning
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/ch03/mult_path.pdf
	width 50text%

\end_inset

 
\end_layout

\begin_layout Itemize
Graph search keeps track of visited nodes, so that we don't visit the same
 node twice.
\end_layout

\begin_layout Itemize
Suppose the first time we visit a node is not via the most optimal path
\end_layout

\begin_deeper
\begin_layout Itemize
then graph search will return a suboptimal path
\end_layout

\end_deeper
\begin_layout Itemize
Under which circumstances can we guarantee that 
\begin_inset Formula $A^{*}$
\end_inset

 graph search is optimal?
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Optimal 
\begin_inset Formula $A^{*}$
\end_inset

 graph search
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Suppose path 
\begin_inset Formula $p$
\end_inset

 to 
\begin_inset Formula $n$
\end_inset

 was selected, but there is a shorter path to
\begin_inset space ~
\end_inset


\begin_inset Formula $n$
\end_inset

.
 Suppose this shorter path is via path 
\begin_inset Formula $p'$
\end_inset

 on the frontier.
 
\end_layout

\begin_layout Itemize
Suppose path 
\begin_inset Formula $p'$
\end_inset

 ends at node 
\begin_inset Formula $n'$
\end_inset

.
 
\end_layout

\begin_layout Itemize
\begin_inset Formula $p$
\end_inset

 was selected before 
\begin_inset Formula $p'$
\end_inset

, so: 
\begin_inset Formula $cost(p)+h(n)\leq cost(p')+h(n')$
\end_inset

.
 
\end_layout

\begin_layout Itemize
Suppose 
\begin_inset Formula $cost(n',n)$
\end_inset

 is the actual cost of a path from 
\begin_inset Formula $n'$
\end_inset

 to 
\begin_inset Formula $n$
\end_inset

.
 The path to 
\begin_inset Formula $n$
\end_inset

 via 
\begin_inset Formula $p'$
\end_inset

 is shorter that 
\begin_inset Formula $p$
\end_inset

 so: 
\begin_inset Formula $cost(p')+cost(n',n)<cost(p)$
\end_inset

.
\end_layout

\begin_layout Itemize
Combining the two:
\begin_inset Formula 
\[
cost(n',n)<cost(p)-cost(p')\leq h(n')-h(n)
\]

\end_inset


\end_layout

\begin_layout Standard
So, the problem won't occur if 
\begin_inset Formula $|h(n')-h(n)|\leq cost(n',n)$
\end_inset

.
 
\end_layout

\end_deeper
\begin_layout Separator
 
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Consistency, or monotonicity
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
A heuristic function 
\begin_inset Formula $h$
\end_inset

 is 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
hiliteb
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

consistent
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 (or monotone) if, 
\begin_inset Formula 
\begin{eqnarray*}
|h(m)-h(n)| & \leq & cost(m,n)
\end{eqnarray*}

\end_inset

 for every arc 
\begin_inset Formula $\tuple{m,n}$
\end_inset

.
 
\begin_inset Newline newline
\end_inset

(This is a form of triangle inequality)
\end_layout

\begin_layout Itemize
If 
\begin_inset Formula $h$
\end_inset

 is consistent, then 
\begin_inset Formula $A^{*}$
\end_inset

 graph search will always finds 
\begin_inset Newline newline
\end_inset

the shortest path to a goal.
 
\end_layout

\begin_layout Itemize
This is a strengthening of admissibility.
 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Summary of search strategies
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{adjustwidth}{-1cm}{-1cm} % adjust the L and R margins by 1 cm
\end_layout

\begin_layout Plain Layout


\backslash
small
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="5">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell multirow="3" alignment="left" valignment="middle" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Strategy
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Frontier
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Halts if
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Halts if no
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="center" valignment="middle" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Space
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
selection
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
solution?
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
solution?
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Depth-first 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Last node added 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
uncover
\end_layout

\end_inset

<2->
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

No
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
uncover
\end_layout

\end_inset

<2->
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

No
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
uncover
\end_layout

\end_inset

<2->
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Linear
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Breadth-first 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
First node added 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
uncover
\end_layout

\end_inset

<2->
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Yes
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
uncover
\end_layout

\end_inset

<2->
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

No
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
uncover
\end_layout

\end_inset

<2->
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Exp
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Best-first 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Global min 
\begin_inset Formula $h(p)$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
uncover
\end_layout

\end_inset

<2->
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

No
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
uncover
\end_layout

\end_inset

<2->
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

No
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
uncover
\end_layout

\end_inset

<2->
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Exp
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Lowest-cost-first 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Minimal 
\begin_inset Formula $cost(p)$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
uncover
\end_layout

\end_inset

<2->
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Yes
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
uncover
\end_layout

\end_inset

<2->
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

No
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
uncover
\end_layout

\end_inset

<2->
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Exp
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $A^{*}$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Minimal 
\begin_inset Formula $f(p)$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
uncover
\end_layout

\end_inset

<2->
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Yes
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
uncover
\end_layout

\end_inset

<2->
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

No
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
uncover
\end_layout

\end_inset

<2->
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Exp
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{adjustwidth}
\end_layout

\end_inset


\end_layout

\begin_layout Description
Halts
\begin_inset space ~
\end_inset

if: If there a path to a goal, it can find one, even on 
\emph on
infinite graphs
\emph default
.
\end_layout

\begin_layout Description
Halts
\begin_inset space ~
\end_inset

if
\begin_inset space ~
\end_inset

no: Even if there is no solution, it will halt on a 
\emph on
finite
\begin_inset space ~
\end_inset

graph
\emph default
 (perhaps with cycles).
\end_layout

\begin_layout Description
Space: Space complexity as a function of the length of the current
\begin_inset space ~
\end_inset

path.
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Example demo
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Here is an example demo of several different search algorithms, including
 
\begin_inset Formula $A^{*}$
\end_inset

.
 Furthermore you can play with different heuristics:
\end_layout

\begin_layout Standard
\align center
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://qiao.github.io/PathFinding.js/visual/
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Note that this demo is tailor-made for planar grids, which is a special
 case of all possible search graphs.
\end_layout

\end_deeper
\end_body
\end_document
