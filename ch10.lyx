#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass beamer
\begin_preamble
\usepackage{cibeamer}
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package none
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 10
\spacing single
\use_hyperref false
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 0
\use_package cancel 0
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 0
\use_package mhchem 0
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip smallskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%% Lecture for Artificial Intelligence, Chapter 9-10, http://artint.info
 
\end_layout

\begin_layout Plain Layout

%% Copyright David L.
 Poole and Alan K.
 Mackworth, 2010-2013
\end_layout

\begin_layout Plain Layout

%% Copyright Peter Ljunglöf, 2015
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

%% This work is licensed under CC BY-NC-SA 4.0, the Creative Commons
\end_layout

\begin_layout Plain Layout

%% Attribution-NonCommercial-ShareAlike 4.0 International License.
 
\end_layout

\begin_layout Plain Layout

%% To view a copy of this license: http://creativecommons.org/licenses/by-nc-sa/4.
0/
\end_layout

\end_inset


\end_layout

\begin_layout Title (Plain Frame)
Chapter 10: Multiagent systems
\end_layout

\begin_layout Subtitle
DIT410/TIN172 Artificial Intelligence
\end_layout

\begin_layout Author
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Peter Ljunglöf
\end_layout

\end_inset

Peter Ljunglöf
\begin_inset Newline newline
\end_inset

 modifed from slides by Poole & Mackworth
\begin_inset Newline newline
\end_inset


\size footnotesize

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

(Licensed under Creative Commons BY-NC-SA v4.0)
\end_layout

\begin_layout Date
8 May, 2015
\end_layout

\begin_layout PlainFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Outline
\end_layout

\end_inset


\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
AtBeginSection[]
\end_layout

\begin_layout Plain Layout

{
\end_layout

\begin_layout Plain Layout

  
\backslash
begin{frame}<beamer>[plain]{Outline}
\end_layout

\begin_layout Plain Layout

    
\backslash
tableofcontents[currentsection]
\end_layout

\begin_layout Plain Layout

  
\backslash
end{frame}
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
AtBeginSubsection[]
\end_layout

\begin_layout Plain Layout

{
\end_layout

\begin_layout Plain Layout

  
\backslash
begin{frame}<beamer>[plain]{Outline}
\end_layout

\begin_layout Plain Layout

    
\backslash
tableofcontents[currentsection,currentsubsection]
\end_layout

\begin_layout Plain Layout

  
\backslash
end{frame}
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Separator

\end_layout

\begin_layout Section
Multiple agents (10.1)
\end_layout

\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Multiple agents
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Let's consider multiple agents, where: 
\end_layout

\begin_layout Itemize
the agents select actions autonomously
\end_layout

\begin_layout Itemize
each agent has its own information state
\end_layout

\begin_deeper
\begin_layout Itemize
they can have different information (even conflicting)
\end_layout

\end_deeper
\begin_layout Itemize
the outcome depends on the actions of all agents
\end_layout

\begin_layout Itemize
each agent has its own utility function (that depends on the total outcome)
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Types of agents
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
There are two extremes of multiagent systems: 
\end_layout

\begin_layout Description
Cooperative: The agents share the same utility function
\end_layout

\begin_deeper
\begin_layout Standard

\emph on
Example:
\emph default
 Automatic trucks in a warehouse
\end_layout

\end_deeper
\begin_layout Description
Competetive: When one agent wins all other agents lose
\end_layout

\begin_deeper
\begin_layout Standard
A common special case is when 
\begin_inset Formula $\sum_{a}u_{a}(o)=0$
\end_inset

 for any outcome 
\begin_inset Formula $o$
\end_inset

.
 This is called a 
\emph on
zero-sum game
\emph default
.
\end_layout

\begin_layout Standard

\emph on
Example:
\emph default
 Most board games
\end_layout

\end_deeper
\begin_layout Standard
Most multiagent systems are between these two extremes.
\end_layout

\begin_layout Standard

\emph on
Example:
\emph default
 Long-distance bike races are usually both 
\emph on
cooperative
\emph default
 (the
\begin_inset space ~
\end_inset

bikers usually form clusters where they take turns in leading the
\begin_inset space ~
\end_inset

group), and 
\emph on
competetive 
\emph default
(only one of them can win in the end).
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Section
Games (10.2)
\end_layout

\begin_layout Subsection
Normal form of games (10.2.1)
\end_layout

\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Normal-form games
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
This is the most basic representation of a game.
 It consists of: 
\end_layout

\begin_layout Itemize
a finite set of agents, 
\begin_inset Formula $I=\{1,\dots,n\}$
\end_inset


\end_layout

\begin_layout Itemize
a set of actions 
\begin_inset Formula $A_{i}$
\end_inset

 for each agent 
\begin_inset Formula $i\in I$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
an 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
alert
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

action profile
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset Formula $\sigma=\left\langle a_{1},\dots,a_{n}\right\rangle $
\end_inset

, means that every agent 
\begin_inset Formula $i\in I$
\end_inset

 carries out action 
\begin_inset Formula $a_{i}$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
a utility function 
\begin_inset Formula $u(\sigma,i)$
\end_inset

 which gives the expected utility for agent 
\begin_inset Formula $i$
\end_inset

 when all agents follow the action profile 
\begin_inset Formula $\sigma$
\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Rock-papers-scissors
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Here's a 
\emph on
payoff matrix
\emph default
 of the game 
\begin_inset Quotes eld
\end_inset

rock-paper-scissors
\begin_inset Quotes erd
\end_inset

:
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="4">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
rock
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
paper
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
scissors
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
rock
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0, 0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
–1, 1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1, –1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
paper
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1, –1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0, 0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
–1, 1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
scissors
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
–1, 1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1, –1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0, 0
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard

\emph on
Note: 
\emph default
This is a zero-gum game.
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Prisoner's dilemma
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Two criminals are arrested for a crime, and each of them is given the following
 opportunities:
\end_layout

\begin_layout Itemize
betray the other one by saying that (s)he did it
\end_layout

\begin_layout Itemize
remain silent
\end_layout

\begin_layout Standard
If both betray each other they will serve 2 years in prison, but if both
 remain silent they will only serve 1 year.
 
\end_layout

\begin_layout Standard
However, if one betrays and the other says nothing, the silent person will
 werve 3 years while the other one will be set free.
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Prisoner's dilemma, payoff matrix
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Here is the payoff matrix for the prisoner's dilemma:
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="3">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
B stays silent
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
B betrays A
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
A stays silent
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
–1, –1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
–3, 0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
A betrays B
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0, –3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
–2, –2
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
Assuming that both criminals are independent and rational agents, 
\begin_inset Newline newline
\end_inset

what will be their actions? 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pause
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
if 
\emph on
B
\emph default
 stays silent, then it's better for 
\emph on
A
\emph default
 to betray
\end_layout

\begin_layout Itemize
if 
\emph on
B
\emph default
 betrays, then it's better for 
\emph on
A
\emph default
 to betray
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pause
\end_layout

\end_inset

 Therefore, the rational action would be to betray the other one.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pause
\end_layout

\end_inset

 So, both will get the 2 year sentence since both are rational agents and
 will come to the same decision.
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Subsection
Extensive form of games (10.2.2)
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Extensive form
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
The normal form of a game can only represent games that are momentaneous,
 i.e., that have no representation of time.
 
\end_layout

\begin_layout Itemize
With the 
\emph on
extensive form
\emph default
 of a game we can represent the unfolding of a game through time.
 
\end_layout

\begin_layout Itemize
For now we assume that the game is fully observable.
\end_layout

\begin_layout Standard
A 
\emph on
perfect information game
\emph default
 in extensive form is also known as a 
\emph on
game tree
\emph default
.
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Extensive form for perfect information games
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
A 
\emph on
perfect information game
\emph default
 in extensive form is a finite tree where the nodes are states and the arcs
 correspond to actions by the agents, in particular:
\end_layout

\begin_layout Itemize
Each internal node is labeled with an agent.
\end_layout

\begin_layout Itemize
Each outgoing arc corresponds to an action for its agent.
\end_layout

\begin_layout Itemize
The leaves represent final outcomes and are labeled with utilities.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Graphics
	filename figures/ch10/SharingGame.pdf
	width 65text%

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Imperfect information games
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Rock-paper-scissors is not a perfect information game: 
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Graphics
	filename figures/ch10/RockPaperScissorsTree.pdf
	width 65text%

\end_inset


\end_layout

\begin_layout Standard
\noindent
In this example, Bob cannot know which of the nodes he is in, 
\begin_inset Newline newline
\end_inset

since he doesn't know which action Alice will perform.
\end_layout

\end_deeper
\begin_layout Section
Zero-sum games (10.3)
\end_layout

\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Perfect information games
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Perfect information games are solvable in a manner similar to fully observable
 single-agent systems.
 We can either do it backward using dynamic programming or forward using
 search.
\end_layout

\begin_layout Itemize
If two agents are competing so that a positive reward for one is a negative
 reward for the other agent, we have a two-agent 
\emph on
zero-sum game
\emph default
.
 
\end_layout

\begin_layout Itemize
The value of a game zero-sum game can be characterized by a single number
 that one agent is trying to maximize and the other agent is trying to minimize.
 
\end_layout

\begin_layout Itemize
This leads to a 
\emph on
minimax
\emph default
 strategy:
\end_layout

\begin_deeper
\begin_layout Itemize
A node is either a MAX node (if it is controlled by the maximising agent),
\end_layout

\begin_layout Itemize
or is a MIN node (if it is controlled by the minimising agent).
\end_layout

\end_deeper
\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Minimax search: tic-tac-toe
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Here is an example of a minimax search tree for tic-tac-toe:
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Graphics
	filename figures/ch10/tictactoe.ps
	width 70text%

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
\begin_inset Formula $\alpha-\beta$
\end_inset

 pruning
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Suppose, we reach a node 
\begin_inset Formula $t$
\end_inset

 in the game tree which has leaves 
\begin_inset Formula $t_{1}$
\end_inset

, \SpecialChar \ldots{}
, 
\begin_inset Formula $t_{k}$
\end_inset

 corresponding to moves of player MIN.
\end_layout

\begin_layout Itemize
Let 
\begin_inset Formula $\alpha$
\end_inset

 be the best value of a position on a path from the root node to 
\begin_inset Formula $t$
\end_inset

.
\end_layout

\begin_layout Itemize
Then, if any of the leaves evaluates to 
\begin_inset Formula $u(t_{i})\leq\alpha$
\end_inset

, we can discard 
\begin_inset Formula $t$
\end_inset

, because any further evaluation will not improve the value of 
\begin_inset Formula $t$
\end_inset

.
\end_layout

\begin_layout Itemize
Analogously, define 
\begin_inset Formula $\beta$
\end_inset

 values for evaluating response moves of MAX.
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Minimax example
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Assume the following minimax search tree:
\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Graphics
	filename figures/ch10/minimax.ps
	width 80text%

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Minimax example, with 
\begin_inset Formula $\alpha-\beta$
\end_inset

 pruning
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
This is how 
\begin_inset Formula $\alpha-\beta$
\end_inset

 pruning might work:
\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
only<1>{
\end_layout

\end_inset


\begin_inset Graphics
	filename figures/ch10/alpha-beta-progress1c.ps
	width 90text%

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\backslash
only<2>{
\end_layout

\end_inset


\begin_inset Graphics
	filename figures/ch10/alpha-beta-progress2c.ps
	width 90text%

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\backslash
only<3>{
\end_layout

\end_inset


\begin_inset Graphics
	filename figures/ch10/alpha-beta-progress3c.ps
	width 90text%

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\backslash
only<4>{
\end_layout

\end_inset


\begin_inset Graphics
	filename figures/ch10/alpha-beta-progress4c.ps
	width 90text%

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\backslash
only<5>{
\end_layout

\end_inset


\begin_inset Graphics
	filename figures/ch10/alpha-beta-progress5c.ps
	width 90text%

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
How efficient is 
\begin_inset Formula $\alpha-\beta$
\end_inset

 pruning?
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
The amount of pruning provided by the 
\begin_inset Formula $\alpha-\beta$
\end_inset

 algorithm depends on the ordering of the children of each node.
 
\end_layout

\begin_layout Itemize
It works best if a highest-valued child of a MAX node is selected first
 and if a lowest-valued child of a MIN node is returned first.
 
\end_layout

\begin_layout Itemize
In implementations of real games, much of the effort is made to try to ensure
 this outcome.
 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Minimax and real games
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Most real games are too big to carry out minimax search, even with α-β pruning.
 
\end_layout

\begin_layout Itemize
For these games, instead of only stopping at leaf nodes, it is possible
 to stop at any node.
 
\end_layout

\begin_layout Itemize
The value returned at the node where the algorithm stops is an estimate
 of the value for this node.
 
\end_layout

\begin_layout Itemize
The function used to estimate the value is an evaluation function.
 
\end_layout

\begin_layout Itemize
Much work goes into finding good evaluation functions.
 
\end_layout

\begin_layout Itemize
There is a trade-off between the amount of computation required to compute
 the evaluation function and the size of the search space that can be explored
 in any given time.
 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\end_body
\end_document
